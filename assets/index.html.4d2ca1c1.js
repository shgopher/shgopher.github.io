import{_ as n,c as s}from"./app.e0455488.js";const a={},t=s(`<h1 id="gin-\u4E2D\u6587\u6587\u6863" tabindex="-1"><a class="header-anchor" href="#gin-\u4E2D\u6587\u6587\u6863" aria-hidden="true">#</a> Gin \u4E2D\u6587\u6587\u6863</h1><p>Gin \u4E2D\u6587\u6587\u6863\uFF0C\u672C\u6587\u6863\u57FA\u4E8E <a href="https://github.com/gin-gonic/gin" target="_blank" rel="noopener noreferrer">Gin</a> \u5B98\u65B9\u6587\u6863\u3002\u4E0D\u5B9A\u671F\u66F4\u65B0\u3002</p><img align="right" width="159px" src="https://raw.githubusercontent.com/gin-gonic/logo/master/color.png"><p><a href="https://travis-ci.org/gin-gonic/gin" target="_blank" rel="noopener noreferrer"><img src="https://travis-ci.org/gin-gonic/gin.svg" alt="Build Status"></a><a href="https://codecov.io/gh/gin-gonic/gin" target="_blank" rel="noopener noreferrer"><img src="https://codecov.io/gh/gin-gonic/gin/branch/master/graph/badge.svg" alt="codecov"></a><a href="https://goreportcard.com/report/github.com/gin-gonic/gin" target="_blank" rel="noopener noreferrer"><img src="https://goreportcard.com/badge/github.com/gin-gonic/gin" alt="Go Report Card"></a><a href="https://godoc.org/github.com/gin-gonic/gin" target="_blank" rel="noopener noreferrer"><img src="https://godoc.org/github.com/gin-gonic/gin?status.svg" alt="GoDoc"></a><a href="https://gitter.im/gin-gonic/gin?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge" target="_blank" rel="noopener noreferrer"><img src="https://badges.gitter.im/Join Chat.svg" alt="Join the chat at https://gitter.im/gin-gonic/gin"></a><a href="https://sourcegraph.com/github.com/gin-gonic/gin?badge" target="_blank" rel="noopener noreferrer"><img src="https://sourcegraph.com/github.com/gin-gonic/gin/-/badge.svg" alt="Sourcegraph"></a><a href="https://www.codetriage.com/gin-gonic/gin" target="_blank" rel="noopener noreferrer"><img src="https://www.codetriage.com/gin-gonic/gin/badges/users.svg" alt="Open Source Helpers"></a><a href="https://github.com/gin-gonic/gin/releases" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/github/release/gin-gonic/gin.svg?style=flat-square" alt="Release"></a></p><p>Gin \u662F\u4E00\u4E2A\u4F7F\u7528 Go \u8BED\u8A00\u5199\u7684 web \u6846\u67B6.\u5B83\u62E5\u6709\u4E0E Martini \u76F8\u4F3C\u7684 API,\u4F46\u5B83\u6BD4 Martini \u5FEB 40 \u591A\u500D\u3002Gin \u5185\u90E8\u4F7F\u7528 Golang \u6700\u5FEB\u7684 HTTP \u8DEF\u7531\u5668 <a href="https://github.com/julienschmidt/httprouter" target="_blank" rel="noopener noreferrer">httprouter</a>\u3002\u5982\u679C\u4F60\u9700\u8981\u66F4\u9AD8\u7684\u6027\u80FD,\u66F4\u5FEB\u7684\u5F00\u53D1\u6548\u7387,\u4F60\u4F1A\u559C\u6B22\u4E0A Gin\u3002</p><h2 id="contents" tabindex="-1"><a class="header-anchor" href="#contents" aria-hidden="true">#</a> Contents</h2><ul><li><a href="#installation">\u5B89\u88C5</a></li><li><a href="#quick-start">\u5FEB\u901F\u5F00\u59CB</a></li><li><a href="#benchmarks">\u57FA\u51C6</a></li><li><a href="#gin-v1-stable">Gin v1.stable</a></li><li><a href="#build-with-jsoniter">\u4F7F\u7528 jsoniter \u6784\u5EFA</a></li><li><a href="#api-examples">API \u793A\u4F8B</a><ul><li><a href="#using-get-post-put-patch-delete-and-options">\u4F7F\u7528 GET,POST,PUT,PATCH,DELETE \u548C OPTIONS \u65B9\u6CD5</a></li><li><a href="#parameters-in-path">\u8DEF\u5F84\u53C2\u6570</a></li><li><a href="#querystring-parameters">Querystring parameters</a></li><li><a href="#multiparturlencoded-form">Multipart/Urlencoded Form</a></li><li><a href="#another-example-query--post-form">Another example: query + post form</a></li><li><a href="#map-as-querystring-or-postform-parameters">Map as querystring or postform parameters</a></li><li><a href="#upload-files">Upload files</a></li><li><a href="#grouping-routes">Grouping routes</a></li><li><a href="#blank-gin-without-middleware-by-default">Blank Gin without middleware by default</a></li><li><a href="#using-middleware">Using middleware</a></li><li><a href="#how-to-write-log-file">How to write log file</a></li><li><a href="#custom-log-format">Custom log format</a></li><li><a href="#controlling-log-output-coloring">Controlling Log output coloring</a></li><li><a href="#model-binding-and-validation">Model binding and validation</a></li><li><a href="#custom-validators">Custom Validators</a></li><li><a href="#only-bind-query-string">Only Bind Query String</a></li><li><a href="#bind-query-string-or-post-data">Bind Query String or Post Data</a></li><li><a href="#bind-uri">Bind Uri</a></li><li><a href="#bind-header">Bind Header</a></li><li><a href="#bind-html-checkboxes">Bind HTML checkboxes</a></li><li><a href="#multiparturlencoded-binding">Multipart/Urlencoded binding</a></li><li><a href="#xml-json-yaml-and-protobuf-rendering">XML, JSON, YAML and ProtoBuf rendering</a></li><li><a href="#jsonp">JSONP rendering</a></li><li><a href="#serving-static-files">Serving static files</a></li><li><a href="#serving-data-from-reader">Serving data from reader</a></li><li><a href="#html-rendering">HTML rendering</a></li><li><a href="#multitemplate">Multitemplate</a></li><li><a href="#redirects">Redirects</a></li><li><a href="#custom-middleware">Custom Middleware</a></li><li><a href="#using-basicauth-middleware">Using BasicAuth() middleware</a></li><li><a href="#goroutines-inside-a-middleware">Goroutines inside a middleware</a></li><li><a href="#custom-http-configuration">Custom HTTP configuration</a></li><li><a href="#support-lets-encrypt">Support Let&#39;s Encrypt</a></li><li><a href="#run-multiple-service-using-gin">Run multiple service using Gin</a></li><li><a href="#graceful-restart-or-stop">Graceful restart or stop</a></li><li><a href="#build-a-single-binary-with-templates">Build a single binary with templates</a></li><li><a href="#bind-form-data-request-with-custom-struct">Bind form-data request with custom struct</a></li><li><a href="#try-to-bind-body-into-different-structs">Try to bind body into different structs</a></li><li><a href="#http2-server-push">http2 server push</a></li><li><a href="#define-format-for-the-log-of-routes">Define format for the log of routes</a></li><li><a href="#set-and-get-a-cookie">Set and get a cookie</a></li></ul></li><li><a href="#testing">Testing</a></li><li><a href="#users">Users</a></li></ul><h2 id="\u5B89\u88C5" tabindex="-1"><a class="header-anchor" href="#\u5B89\u88C5" aria-hidden="true">#</a> \u5B89\u88C5</h2><h2 id="installation" tabindex="-1"><a class="header-anchor" href="#installation" aria-hidden="true">#</a> Installation</h2><p>\u5B89\u88C5 gin \u5305\u4E4B\u524D\uFF0C\u9700\u8981\u5148\u4E0B\u8F7D\u5B89\u88C5 Go \u4EE5\u53CA\u8BBE\u7F6E\u597D Go \u5DE5\u4F5C\u7A7A\u95F4\u3002</p><ol><li>\u4E0B\u8F7D\u5B89\u88C5\uFF08Go \u7248\u672C 1.10+\uFF09:</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ go get -u github.com/gin-gonic/gin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>\u5BFC\u5165\u5305:</li></ol><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">import</span> <span class="token string">&quot;github.com/gin-gonic/gin&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>(\u53EF\u9009) \u5BFC\u5165 <code>net/http</code>\u3002 \u5982\u679C\u9700\u8981 http \u5305\u4E2D\u7684\u4E00\u4E9B\u53C2\u91CF\u5982 <code>http.StatusOK</code>\u3002</li></ol><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">import</span> <span class="token string">&quot;net/http&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="\u4F7F\u7528\u5305\u7BA1\u7406\u5DE5\u5177-govendor" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u5305\u7BA1\u7406\u5DE5\u5177-govendor" aria-hidden="true">#</a> \u4F7F\u7528\u5305\u7BA1\u7406\u5DE5\u5177 <a href="https://github.com/kardianos/govendor" target="_blank" rel="noopener noreferrer">Govendor</a></h3><ol><li><code>go get</code> govendor</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ go get github.com/kardianos/govendor
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>\u521B\u5EFA\u9879\u76EE\u6587\u4EF6\u5939\u5E76\u8FDB\u5165</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">mkdir</span> -p <span class="token variable">$GOPATH</span>/src/github.com/myusername/project <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> <span class="token string">&quot;<span class="token variable">$_</span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>\u521D\u59CB\u5316\u4F60\u7684\u9879\u76EE\u5E76\u6DFB\u52A0 gin</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ govendor init
$ govendor fetch github.com/gin-gonic/gin@v1.3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>\u590D\u5236\u4E00\u4E2A\u6A21\u677F\u5230\u9879\u76EE</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">curl</span> https://raw.githubusercontent.com/gin-gonic/gin/master/examples/basic/main.go <span class="token operator">&gt;</span> main.go
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="5"><li>\u542F\u52A8\u9879\u76EE</li></ol><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ go run main.go
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="\u5FEB\u901F\u5F00\u59CB" tabindex="-1"><a class="header-anchor" href="#\u5FEB\u901F\u5F00\u59CB" aria-hidden="true">#</a> \u5FEB\u901F\u5F00\u59CB</h2><h2 id="quick-start" tabindex="-1"><a class="header-anchor" href="#quick-start" aria-hidden="true">#</a> Quick start</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># \u5047\u5B9A\u4E0B\u9762\u7684\u4EE3\u7801\u5728 example.go \u6587\u4EF6\u4E2D</span>
$ <span class="token function">cat</span> example.go
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;github.com/gin-gonic/gin&quot;</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/ping&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span>
			<span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;pong&quot;</span><span class="token punctuation">,</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// listen and serve on 0.0.0.0:8080</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># \u4E91\u8FD0\u884C example.go \u7136\u540E\u5728\u6D4F\u89C8\u5668\u8BBF\u95EE 0.0.0.0:8080/ping
$ go run example.go
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u57FA\u51C6" tabindex="-1"><a class="header-anchor" href="#\u57FA\u51C6" aria-hidden="true">#</a> \u57FA\u51C6</h2><h2 id="benchmarks" tabindex="-1"><a class="header-anchor" href="#benchmarks" aria-hidden="true">#</a> Benchmarks</h2><p>Gin \u4F7F\u7528 <a href="https://github.com/julienschmidt/httprouter" target="_blank" rel="noopener noreferrer">HttpRouter</a> \u7684\u4E00\u4E2A\u5B9A\u5236\u7248\u672C</p><p><a href="https://github.com/gin-gonic/gin/blob/master/BENCHMARKS.md" target="_blank" rel="noopener noreferrer">\u67E5\u770B\u6240\u6709\u57FA\u51C6</a></p><table><thead><tr><th>Benchmark name</th><th style="text-align:right;">(1)</th><th style="text-align:right;">(2)</th><th style="text-align:right;">(3)</th><th style="text-align:right;">(4)</th></tr></thead><tbody><tr><td><strong>BenchmarkGin_GithubAll</strong></td><td style="text-align:right;"><strong>30000</strong></td><td style="text-align:right;"><strong>48375</strong></td><td style="text-align:right;"><strong>0</strong></td><td style="text-align:right;"><strong>0</strong></td></tr><tr><td>BenchmarkAce_GithubAll</td><td style="text-align:right;">10000</td><td style="text-align:right;">134059</td><td style="text-align:right;">13792</td><td style="text-align:right;">167</td></tr><tr><td>BenchmarkBear_GithubAll</td><td style="text-align:right;">5000</td><td style="text-align:right;">534445</td><td style="text-align:right;">86448</td><td style="text-align:right;">943</td></tr><tr><td>BenchmarkBeego_GithubAll</td><td style="text-align:right;">3000</td><td style="text-align:right;">592444</td><td style="text-align:right;">74705</td><td style="text-align:right;">812</td></tr><tr><td>BenchmarkBone_GithubAll</td><td style="text-align:right;">200</td><td style="text-align:right;">6957308</td><td style="text-align:right;">698784</td><td style="text-align:right;">8453</td></tr><tr><td>BenchmarkDenco_GithubAll</td><td style="text-align:right;">10000</td><td style="text-align:right;">158819</td><td style="text-align:right;">20224</td><td style="text-align:right;">167</td></tr><tr><td>BenchmarkEcho_GithubAll</td><td style="text-align:right;">10000</td><td style="text-align:right;">154700</td><td style="text-align:right;">6496</td><td style="text-align:right;">203</td></tr><tr><td>BenchmarkGocraftWeb_GithubAll</td><td style="text-align:right;">3000</td><td style="text-align:right;">570806</td><td style="text-align:right;">131656</td><td style="text-align:right;">1686</td></tr><tr><td>BenchmarkGoji_GithubAll</td><td style="text-align:right;">2000</td><td style="text-align:right;">818034</td><td style="text-align:right;">56112</td><td style="text-align:right;">334</td></tr><tr><td>BenchmarkGojiv2_GithubAll</td><td style="text-align:right;">2000</td><td style="text-align:right;">1213973</td><td style="text-align:right;">274768</td><td style="text-align:right;">3712</td></tr><tr><td>BenchmarkGoJsonRest_GithubAll</td><td style="text-align:right;">2000</td><td style="text-align:right;">785796</td><td style="text-align:right;">134371</td><td style="text-align:right;">2737</td></tr><tr><td>BenchmarkGoRestful_GithubAll</td><td style="text-align:right;">300</td><td style="text-align:right;">5238188</td><td style="text-align:right;">689672</td><td style="text-align:right;">4519</td></tr><tr><td>BenchmarkGorillaMux_GithubAll</td><td style="text-align:right;">100</td><td style="text-align:right;">10257726</td><td style="text-align:right;">211840</td><td style="text-align:right;">2272</td></tr><tr><td>BenchmarkHttpRouter_GithubAll</td><td style="text-align:right;">20000</td><td style="text-align:right;">105414</td><td style="text-align:right;">13792</td><td style="text-align:right;">167</td></tr><tr><td>BenchmarkHttpTreeMux_GithubAll</td><td style="text-align:right;">10000</td><td style="text-align:right;">319934</td><td style="text-align:right;">65856</td><td style="text-align:right;">671</td></tr><tr><td>BenchmarkKocha_GithubAll</td><td style="text-align:right;">10000</td><td style="text-align:right;">209442</td><td style="text-align:right;">23304</td><td style="text-align:right;">843</td></tr><tr><td>BenchmarkLARS_GithubAll</td><td style="text-align:right;">20000</td><td style="text-align:right;">62565</td><td style="text-align:right;">0</td><td style="text-align:right;">0</td></tr><tr><td>BenchmarkMacaron_GithubAll</td><td style="text-align:right;">2000</td><td style="text-align:right;">1161270</td><td style="text-align:right;">204194</td><td style="text-align:right;">2000</td></tr><tr><td>BenchmarkMartini_GithubAll</td><td style="text-align:right;">200</td><td style="text-align:right;">9991713</td><td style="text-align:right;">226549</td><td style="text-align:right;">2325</td></tr><tr><td>BenchmarkPat_GithubAll</td><td style="text-align:right;">200</td><td style="text-align:right;">5590793</td><td style="text-align:right;">1499568</td><td style="text-align:right;">27435</td></tr><tr><td>BenchmarkPossum_GithubAll</td><td style="text-align:right;">10000</td><td style="text-align:right;">319768</td><td style="text-align:right;">84448</td><td style="text-align:right;">609</td></tr><tr><td>BenchmarkR2router_GithubAll</td><td style="text-align:right;">10000</td><td style="text-align:right;">305134</td><td style="text-align:right;">77328</td><td style="text-align:right;">979</td></tr><tr><td>BenchmarkRivet_GithubAll</td><td style="text-align:right;">10000</td><td style="text-align:right;">132134</td><td style="text-align:right;">16272</td><td style="text-align:right;">167</td></tr><tr><td>BenchmarkTango_GithubAll</td><td style="text-align:right;">3000</td><td style="text-align:right;">552754</td><td style="text-align:right;">63826</td><td style="text-align:right;">1618</td></tr><tr><td>BenchmarkTigerTonic_GithubAll</td><td style="text-align:right;">1000</td><td style="text-align:right;">1439483</td><td style="text-align:right;">239104</td><td style="text-align:right;">5374</td></tr><tr><td>BenchmarkTraffic_GithubAll</td><td style="text-align:right;">100</td><td style="text-align:right;">11383067</td><td style="text-align:right;">2659329</td><td style="text-align:right;">21848</td></tr><tr><td>BenchmarkVulcan_GithubAll</td><td style="text-align:right;">5000</td><td style="text-align:right;">394253</td><td style="text-align:right;">19894</td><td style="text-align:right;">609</td></tr></tbody></table><ul><li>(1): \u6301\u7EED\u65F6\u95F4\u8FBE\u5230\u7684\u603B\u91CD\u590D\u6B21\u6570\u8D8A\u591A\uFF0C\u610F\u5473\u7740\u7ED3\u679C\u8D8A\u597D</li><li>(2): \u5355\u6B21\u91CD\u590D\u6301\u7EED\u65F6\u95F4\uFF08ns / op\uFF09\u8D8A\u4F4E\u8D8A\u597D</li><li>(3): \u5806\u5185\u5B58\uFF08B / op\uFF09\u8D8A\u4F4E\u8D8A\u597D</li><li>(4): \u5E73\u5747\u6BCF\u6B21\u91CD\u590D\u5206\u914D (allocs/op) \u8D8A\u4F4E\u8D8A\u597D</li></ul><h2 id="gin-v1-stable" tabindex="-1"><a class="header-anchor" href="#gin-v1-stable" aria-hidden="true">#</a> Gin v1. stable</h2><ul><li>[x] Zero allocation router.</li><li>[x] Still the fastest http router and framework. From routing to writing.</li><li>[x] Complete suite of unit tests</li><li>[x] Battle tested</li><li>[x] API frozen, new releases will not break your code.</li></ul><h2 id="\u4F7F\u7528-jsoniter-\u6784\u5EFA" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528-jsoniter-\u6784\u5EFA" aria-hidden="true">#</a> \u4F7F\u7528 <a href="https://github.com/json-iterator/go" target="_blank" rel="noopener noreferrer">jsoniter</a> \u6784\u5EFA</h2><h2 id="build-with-jsoniter" tabindex="-1"><a class="header-anchor" href="#build-with-jsoniter" aria-hidden="true">#</a> Build with <a href="https://github.com/json-iterator/go" target="_blank" rel="noopener noreferrer">jsoniter</a></h2><p>Gin \u4F7F\u7528 <code>encoding/json</code> \u4F5C\u4E3A\u9ED8\u8BA4\u7684 json \u89E3\u6790\u5668\u4F46\u4F60\u53EF\u4EE5\u6784\u5EFA\u65F6\u6307\u5B9A\u6210 <a href="https://github.com/json-iterator/go" target="_blank" rel="noopener noreferrer">jsoniter</a></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ go build -tags<span class="token operator">=</span>jsoniter <span class="token builtin class-name">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="api\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#api\u793A\u4F8B" aria-hidden="true">#</a> API\u793A\u4F8B</h2><h2 id="api-examples" tabindex="-1"><a class="header-anchor" href="#api-examples" aria-hidden="true">#</a> Api examples</h2><h3 id="\u4F7F\u7528-get-post-put-patch-delete-\u548C-options-\u8DEF\u7531\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528-get-post-put-patch-delete-\u548C-options-\u8DEF\u7531\u65B9\u6CD5" aria-hidden="true">#</a> \u4F7F\u7528 GET, POST, PUT, PATCH, DELETE \u548C OPTIONS \u8DEF\u7531\u65B9\u6CD5</h3><h3 id="using-get-post-put-patch-delete-and-options" tabindex="-1"><a class="header-anchor" href="#using-get-post-put-patch-delete-and-options" aria-hidden="true">#</a> Using GET, POST, PUT, PATCH, DELETE and OPTIONS</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// \u7981\u7528\u63A7\u5236\u53F0\u989C\u8272</span>
	<span class="token comment">// gin.DisableConsoleColor()</span>

	<span class="token comment">// \u7528\u9ED8\u8BA4\u7684\u4E2D\u95F4\u4EF6\u521B\u5EFA\u4E00\u4E2Agin\u8DEF\u7531\u5668:</span>
	<span class="token comment">// logger and recovery (crash-free) middleware</span>
	<span class="token comment">// \u5305\u542B\u65E5\u5FD7\u548C\u6062\u590D(\u4E0D\u5D29\u6E83)\u4E2D\u95F4\u4EF6</span>
	router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/someGet&quot;</span><span class="token punctuation">,</span> getting<span class="token punctuation">)</span>
	router<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">&quot;/somePost&quot;</span><span class="token punctuation">,</span> posting<span class="token punctuation">)</span>
	router<span class="token punctuation">.</span><span class="token function">PUT</span><span class="token punctuation">(</span><span class="token string">&quot;/somePut&quot;</span><span class="token punctuation">,</span> putting<span class="token punctuation">)</span>
	router<span class="token punctuation">.</span><span class="token function">DELETE</span><span class="token punctuation">(</span><span class="token string">&quot;/someDelete&quot;</span><span class="token punctuation">,</span> deleting<span class="token punctuation">)</span>
	router<span class="token punctuation">.</span><span class="token function">PATCH</span><span class="token punctuation">(</span><span class="token string">&quot;/somePatch&quot;</span><span class="token punctuation">,</span> patching<span class="token punctuation">)</span>
	router<span class="token punctuation">.</span><span class="token function">HEAD</span><span class="token punctuation">(</span><span class="token string">&quot;/someHead&quot;</span><span class="token punctuation">,</span> head<span class="token punctuation">)</span>
	router<span class="token punctuation">.</span><span class="token function">OPTIONS</span><span class="token punctuation">(</span><span class="token string">&quot;/someOptions&quot;</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span>

	<span class="token comment">// By default it serves on :8080 unless a</span>
	<span class="token comment">// PORT environment variable was defined.</span>
	<span class="token comment">// \u9ED8\u8BA4\u76D1\u542C8080\u7AEF\u53E3\uFF0C\u9664\u975E\u6307\u5B9A\u4E86PORT\u73AF\u5883\u53D8\u91CF</span>
	router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token comment">// router.Run(&quot;:3000&quot;) \u6307\u5B9A\u7AEF\u53E3\u53F7\u4E3A :3000</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u8DEF\u5F84\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u8DEF\u5F84\u53C2\u6570" aria-hidden="true">#</a> \u8DEF\u5F84\u53C2\u6570</h3><h3 id="parameters-in-path" tabindex="-1"><a class="header-anchor" href="#parameters-in-path" aria-hidden="true">#</a> Parameters in path</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	<span class="token comment">// \u8DEF\u75311 \u5339\u914D /user/john,\u4F46\u662F\u4E0D\u5339\u914D /user/ \u6216 /user</span>
	router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/user/:name&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		name <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Param</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span>
		c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">&quot;Hello %s&quot;</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>


	<span class="token comment">// \u8DEF\u75312 \u8FD9\u4E2A\u4F1A\u5339\u914D /user/john/ \u548C /user/john/send</span>
	router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/user/:name/*action&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		name <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Param</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span>
		action <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Param</span><span class="token punctuation">(</span><span class="token string">&quot;action&quot;</span><span class="token punctuation">)</span>
		message <span class="token operator">:=</span> name <span class="token operator">+</span> <span class="token string">&quot; is &quot;</span> <span class="token operator">+</span> action
		c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> message<span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>

	<span class="token comment">// \u6CE8\u610F /user/:name \u548C /user/:name/\u662F\u4FE9\u4E2A\u5B8C\u5168\u4E0D\u540C\u7684\u8DEF\u7531</span>

	router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8080&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u67E5\u8BE2\u5B57\u7B26\u4E32\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u67E5\u8BE2\u5B57\u7B26\u4E32\u53C2\u6570" aria-hidden="true">#</a> \u67E5\u8BE2\u5B57\u7B26\u4E32\u53C2\u6570</h3><h3 id="querystring-parameters" tabindex="-1"><a class="header-anchor" href="#querystring-parameters" aria-hidden="true">#</a> Querystring parameters</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	<span class="token comment">// \u67E5\u8BE2\u5B57\u7B26\u4E32\u53C2\u6570\u901A\u8FC7\u89E3\u6790\u57FA\u7840\u8BF7\u6C42\u5BF9\u8C61\u83B7\u5F97</span>
	<span class="token comment">// \u8BF7\u6C42\u54CD\u5E94\u5339\u914Durl:  /welcome?firstname=Jane&amp;lastname=Doe</span>
	router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/welcome&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	    <span class="token comment">// \u53D6firstname\u7684\u503C,\u4E0D\u5B58\u5728\u5219\u8BBE\u4E3AGuest</span>
		firstname <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">DefaultQuery</span><span class="token punctuation">(</span><span class="token string">&quot;firstname&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Guest&quot;</span><span class="token punctuation">)</span>
		lastname <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">&quot;lastname&quot;</span><span class="token punctuation">)</span> <span class="token comment">// shortcut for c.Request.URL.Query().Get(&quot;lastname&quot;)</span>

		c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">&quot;Hello %s %s&quot;</span><span class="token punctuation">,</span> firstname<span class="token punctuation">,</span> lastname<span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8080&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="multipart-urlencoded-\u8868\u5355" tabindex="-1"><a class="header-anchor" href="#multipart-urlencoded-\u8868\u5355" aria-hidden="true">#</a> Multipart/Urlencoded \u8868\u5355</h3><h3 id="multipart-urlencoded-form" tabindex="-1"><a class="header-anchor" href="#multipart-urlencoded-form" aria-hidden="true">#</a> Multipart/Urlencoded Form</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	router<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">&quot;/form_post&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		message <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">PostForm</span><span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">)</span>
		nick <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">DefaultPostForm</span><span class="token punctuation">(</span><span class="token string">&quot;nick&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;anonymous&quot;</span><span class="token punctuation">)</span>

		c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span>
			<span class="token string">&quot;status&quot;</span><span class="token punctuation">:</span>  <span class="token string">&quot;posted&quot;</span><span class="token punctuation">,</span>
			<span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span> message<span class="token punctuation">,</span>
			<span class="token string">&quot;nick&quot;</span><span class="token punctuation">:</span>    nick<span class="token punctuation">,</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8080&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5176\u4ED6\u793A\u4F8B-\u67E5\u8BE2-\u8868\u5355" tabindex="-1"><a class="header-anchor" href="#\u5176\u4ED6\u793A\u4F8B-\u67E5\u8BE2-\u8868\u5355" aria-hidden="true">#</a> \u5176\u4ED6\u793A\u4F8B: \u67E5\u8BE2 + \u8868\u5355</h3><h3 id="another-example-query-post-form" tabindex="-1"><a class="header-anchor" href="#another-example-query-post-form" aria-hidden="true">#</a> Another example: query + post form</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>POST /post?id<span class="token operator">=</span><span class="token number">1234</span><span class="token operator">&amp;</span><span class="token assign-left variable">page</span><span class="token operator">=</span><span class="token number">1</span> HTTP/1.1
Content-Type: application/x-www-form-urlencoded

<span class="token assign-left variable">name</span><span class="token operator">=</span>manu<span class="token operator">&amp;</span><span class="token assign-left variable">message</span><span class="token operator">=</span>this_is_great
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	router<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">&quot;/post&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// url \u4E2D\u67E5\u8BE2\u6570\u636E</span>
		id <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span>
		page <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">DefaultQuery</span><span class="token punctuation">(</span><span class="token string">&quot;page&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">)</span>

		<span class="token comment">// post \u8868\u5355\u4E2D\u6570\u636E</span>
		name <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">PostForm</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span>
		message <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">PostForm</span><span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">)</span>

		fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;id: %s; page: %s; name: %s; message: %s&quot;</span><span class="token punctuation">,</span> id<span class="token punctuation">,</span> page<span class="token punctuation">,</span> name<span class="token punctuation">,</span> message<span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8080&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>id: <span class="token number">1234</span><span class="token punctuation">;</span> page: <span class="token number">1</span><span class="token punctuation">;</span> name: manu<span class="token punctuation">;</span> message: this_is_great
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="\u4EE5\u6620\u5C04\u8868\u793A\u7684\u67E5\u8BE2\u5B57\u7B26\u4E32\u6216\u8005\u8868\u5355\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u4EE5\u6620\u5C04\u8868\u793A\u7684\u67E5\u8BE2\u5B57\u7B26\u4E32\u6216\u8005\u8868\u5355\u53C2\u6570" aria-hidden="true">#</a> \u4EE5\u6620\u5C04\u8868\u793A\u7684\u67E5\u8BE2\u5B57\u7B26\u4E32\u6216\u8005\u8868\u5355\u53C2\u6570</h3><h3 id="map-as-querystring-or-postform-parameters" tabindex="-1"><a class="header-anchor" href="#map-as-querystring-or-postform-parameters" aria-hidden="true">#</a> Map as querystring or postform parameters</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>POST /post?ids<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1234</span><span class="token operator">&amp;</span>ids<span class="token punctuation">[</span>b<span class="token punctuation">]</span><span class="token operator">=</span>hello HTTP/1.1
Content-Type: application/x-www-form-urlencoded

names<span class="token punctuation">[</span>first<span class="token punctuation">]</span><span class="token operator">=</span>thinkerou<span class="token operator">&amp;</span>names<span class="token punctuation">[</span>second<span class="token punctuation">]</span><span class="token operator">=</span>tianou
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	router<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">&quot;/post&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>

		ids <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">QueryMap</span><span class="token punctuation">(</span><span class="token string">&quot;ids&quot;</span><span class="token punctuation">)</span>
		names <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">PostFormMap</span><span class="token punctuation">(</span><span class="token string">&quot;names&quot;</span><span class="token punctuation">)</span>

		fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;ids: %v; names: %v&quot;</span><span class="token punctuation">,</span> ids<span class="token punctuation">,</span> names<span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8080&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>ids: map<span class="token punctuation">[</span>b:hello a:1234<span class="token punctuation">]</span>, names: map<span class="token punctuation">[</span>second:tianou first:thinkerou<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="\u4E0A\u4F20\u6587\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u4E0A\u4F20\u6587\u4EF6" aria-hidden="true">#</a> \u4E0A\u4F20\u6587\u4EF6</h3><h3 id="upload-files" tabindex="-1"><a class="header-anchor" href="#upload-files" aria-hidden="true">#</a> Upload files</h3><h4 id="\u5355\u4E2A\u6587\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u5355\u4E2A\u6587\u4EF6" aria-hidden="true">#</a> \u5355\u4E2A\u6587\u4EF6</h4><p>\u53C2\u8003\u95EE\u9898 <a href="https://github.com/gin-gonic/gin/issues/774" target="_blank" rel="noopener noreferrer">#774</a> \u548C\u7EC6\u8282 <a href="examples/upload-file/single">example code</a>.</p><p><code>file.Filename</code> <strong>\u662F\u4E0D\u53EF\u4FE1\u7684</strong>\u3002 \u67E5\u770B <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Disposition#Directives" target="_blank" rel="noopener noreferrer">MDN <code>Content-Disposition</code></a> \u548C <a href="https://github.com/gin-gonic/gin/issues/1693" target="_blank" rel="noopener noreferrer">#1693</a></p><blockquote><p>filename \u603B\u662F\u53EF\u9009\u7684\uFF0C\u5E94\u7528\u7A0B\u5E8F\u4E0D\u80FD\u76F2\u76EE\u5730\u4F7F\u7528\u5B83\uFF1A\u5E94\u8BE5\u5220\u9664\u8DEF\u5F84\u4FE1\u606F\uFF0C\u5E76\u6267\u884C\u5230\u670D\u52A1\u5668\u6587\u4EF6\u7CFB\u7EDF\u89C4\u5219\u7684\u8F6C\u6362\u3002</p></blockquote><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token comment">// \u8BBE\u7F6E\u53EF\u4EE5\u4E0A\u4F20 multipart \u8868\u5355\u7684\u6700\u5927\u4F53\u79EF\uFF08\u9ED8\u8BA4\u4E3A 32MiB\uFF09</span>
	<span class="token comment">// router.MaxMultipartMemory = 8 &lt;&lt; 20  // 8 MiB</span>
	router<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">&quot;/upload&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// single file</span>
		file<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">FormFile</span><span class="token punctuation">(</span><span class="token string">&quot;file&quot;</span><span class="token punctuation">)</span>
		log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>Filename<span class="token punctuation">)</span>

		<span class="token comment">// \u590D\u5236\u6587\u4EF6\u5230\u6307\u5B9A\u76EE\u6807</span>
		<span class="token comment">// c.SaveUploadedFile(file, dst)</span>

		c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;&#39;%s&#39; uploaded!&quot;</span><span class="token punctuation">,</span> file<span class="token punctuation">.</span>Filename<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8080&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528 <code>curl</code>:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">curl</span> -X POST http://localhost:8080/upload <span class="token punctuation">\\</span>
  -F <span class="token string">&quot;file=@/Users/appleboy/test.zip&quot;</span> <span class="token punctuation">\\</span>
  -H <span class="token string">&quot;Content-Type: multipart/form-data&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u591A\u4E2A\u6587\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u591A\u4E2A\u6587\u4EF6" aria-hidden="true">#</a> \u591A\u4E2A\u6587\u4EF6</h4><p>\u67E5\u770B\u7EC6\u8282 <a href="https://github.com/gin-gonic/examples/tree/master/upload-file/multiple" target="_blank" rel="noopener noreferrer">example code</a>.</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token comment">// \u8BBE\u7F6E\u53EF\u4EE5\u4E0A\u4F20 multipart \u8868\u5355\u7684\u6700\u5927\u4F53\u79EF\uFF08\u9ED8\u8BA4\u4E3A 32MiB\uFF09</span>
	<span class="token comment">// router.MaxMultipartMemory = 8 &lt;&lt; 20  // 8 MiB</span>
	router<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">&quot;/upload&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// Multipart form</span>
		form<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">MultipartForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		files <span class="token operator">:=</span> form<span class="token punctuation">.</span>File<span class="token punctuation">[</span><span class="token string">&quot;upload[]&quot;</span><span class="token punctuation">]</span>

		<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> file <span class="token operator">:=</span> <span class="token keyword">range</span> files <span class="token punctuation">{</span>
			log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>Filename<span class="token punctuation">)</span>

			<span class="token comment">// Upload the file to specific dst.</span>
			<span class="token comment">// c.SaveUploadedFile(file, dst)</span>
		<span class="token punctuation">}</span>
		c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;%d files uploaded!&quot;</span><span class="token punctuation">,</span> <span class="token function">len</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8080&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528 <code>curl</code>:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">curl</span> -X POST http://localhost:8080/upload <span class="token punctuation">\\</span>
  -F <span class="token string">&quot;upload[]=@/Users/appleboy/test1.zip&quot;</span> <span class="token punctuation">\\</span>
  -F <span class="token string">&quot;upload[]=@/Users/appleboy/test2.zip&quot;</span> <span class="token punctuation">\\</span>
  -H <span class="token string">&quot;Content-Type: multipart/form-data&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5206\u7EC4\u8DEF\u7531" tabindex="-1"><a class="header-anchor" href="#\u5206\u7EC4\u8DEF\u7531" aria-hidden="true">#</a> \u5206\u7EC4\u8DEF\u7531</h3><h3 id="grouping-routes" tabindex="-1"><a class="header-anchor" href="#grouping-routes" aria-hidden="true">#</a> Grouping routes</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	<span class="token comment">// Simple group: v1</span>
	v1 <span class="token operator">:=</span> router<span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">&quot;/v1&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		v1<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">&quot;/login&quot;</span><span class="token punctuation">,</span> loginEndpoint<span class="token punctuation">)</span>
		v1<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">&quot;/submit&quot;</span><span class="token punctuation">,</span> submitEndpoint<span class="token punctuation">)</span>
		v1<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">&quot;/read&quot;</span><span class="token punctuation">,</span> readEndpoint<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// Simple group: v2</span>
	v2 <span class="token operator">:=</span> router<span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">&quot;/v2&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		v2<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">&quot;/login&quot;</span><span class="token punctuation">,</span> loginEndpoint<span class="token punctuation">)</span>
		v2<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">&quot;/submit&quot;</span><span class="token punctuation">,</span> submitEndpoint<span class="token punctuation">)</span>
		v2<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">&quot;/read&quot;</span><span class="token punctuation">,</span> readEndpoint<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8080&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u65E0\u4E2D\u95F4\u4EF6\u8DEF\u7531" tabindex="-1"><a class="header-anchor" href="#\u65E0\u4E2D\u95F4\u4EF6\u8DEF\u7531" aria-hidden="true">#</a> \u65E0\u4E2D\u95F4\u4EF6\u8DEF\u7531</h3><h3 id="blank-gin-without-middleware-by-default" tabindex="-1"><a class="header-anchor" href="#blank-gin-without-middleware-by-default" aria-hidden="true">#</a> Blank Gin without middleware by default</h3><p>\u4F7F\u7528</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u800C\u4E0D\u662F</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// \u9ED8\u8BA4\u60C5\u51B5\u5DF2\u542F\u7528\u4E86 log \u548C\u6062\u590D\u4E2D\u95F4\u4EF6</span>
r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4F7F\u7528\u4E2D\u95F4\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u4E2D\u95F4\u4EF6" aria-hidden="true">#</a> \u4F7F\u7528\u4E2D\u95F4\u4EF6</h3><h3 id="using-middleware" tabindex="-1"><a class="header-anchor" href="#using-middleware" aria-hidden="true">#</a> Using middleware</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// \u521B\u5EFA\u4E0D\u542B\u9ED8\u8BA4\u4E2D\u95F4\u4EF6\u7684\u8DEF\u7531</span>
	r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	<span class="token comment">// \u5168\u5C40\u4E2D\u95F4\u4EF6</span>
	<span class="token comment">// Logger \u4E2D\u95F4\u4EF6\u4F1A\u5C06\u65E5\u5FD7\u5199\u5230 gin.DefaultWriter \u5373\u4F7F\u6307\u5B9A GIN_MODE=release</span>
	<span class="token comment">// \u9ED8\u8BA4\u60C5\u51B5\u4E0B gin.DefaultWriter = os.Stdout</span>
	r<span class="token punctuation">.</span><span class="token function">Use</span><span class="token punctuation">(</span>gin<span class="token punctuation">.</span><span class="token function">Logger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    
	<span class="token comment">// Recovery \u4E2D\u95F4\u4EF6\u4ECE\u4EFB\u4F55 panic \u6062\u590D \u5E76\u4E14\u5199\u5165\u4E00\u4E2A 500 \u72B6\u6001\u7801</span>
	r<span class="token punctuation">.</span><span class="token function">Use</span><span class="token punctuation">(</span>gin<span class="token punctuation">.</span><span class="token function">Recovery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    
	<span class="token comment">// \u53EF\u4EE5\u968F\u5FC3\u6DFB\u52A0\u4E2D\u95F4\u4EF6\u5230\u4EFB\u4F55\u4F60\u60F3\u8981\u6DFB\u52A0\u7684\u8DEF\u7531\u4E0A</span>
	r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/benchmark&quot;</span><span class="token punctuation">,</span> <span class="token function">MyBenchLogger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> benchEndpoint<span class="token punctuation">)</span>

	<span class="token comment">// \u8BA4\u8BC1\u5206\u7EC4</span>
	<span class="token comment">// authorized := r.Group(&quot;/&quot;, AuthRequired())</span>
	<span class="token comment">// exactly the same as:</span>
	authorized <span class="token operator">:=</span> r<span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span>
	<span class="token comment">// per group middleware! in this case we use the custom created</span>
	<span class="token comment">// AuthRequired() middleware just in the &quot;authorized&quot; group.</span>
	authorized<span class="token punctuation">.</span><span class="token function">Use</span><span class="token punctuation">(</span><span class="token function">AuthRequired</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		authorized<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">&quot;/login&quot;</span><span class="token punctuation">,</span> loginEndpoint<span class="token punctuation">)</span>
		authorized<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">&quot;/submit&quot;</span><span class="token punctuation">,</span> submitEndpoint<span class="token punctuation">)</span>
		authorized<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">&quot;/read&quot;</span><span class="token punctuation">,</span> readEndpoint<span class="token punctuation">)</span>

		<span class="token comment">// \u5D4C\u5957\u5206\u7EC4</span>
		testing <span class="token operator">:=</span> authorized<span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">&quot;testing&quot;</span><span class="token punctuation">)</span>
		testing<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/analytics&quot;</span><span class="token punctuation">,</span> analyticsEndpoint<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	<span class="token comment">// Listen and serve on 0.0.0.0:8080</span>
	r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8080&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5982\u4F55\u5199\u65E5\u5FD7" tabindex="-1"><a class="header-anchor" href="#\u5982\u4F55\u5199\u65E5\u5FD7" aria-hidden="true">#</a> \u5982\u4F55\u5199\u65E5\u5FD7</h3><h3 id="how-to-write-log-file" tabindex="-1"><a class="header-anchor" href="#how-to-write-log-file" aria-hidden="true">#</a> How to write log file</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5F53\u4F60\u4E0D\u9700\u8981\u5199\u5165\u65E5\u5FD7\u65F6\u989C\u8272\u63D0\u793A\u65F6, \u5173\u95ED\u63A7\u5236\u53F0\u989C\u8272.</span>
    gin<span class="token punctuation">.</span><span class="token function">DisableConsoleColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment">// \u5C06\u65E5\u5FD7\u5199\u5165\u6307\u5B9A\u6587\u4EF6</span>
    f<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span><span class="token string">&quot;gin.log&quot;</span><span class="token punctuation">)</span>
    gin<span class="token punctuation">.</span>DefaultWriter <span class="token operator">=</span> io<span class="token punctuation">.</span><span class="token function">MultiWriter</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span>

    <span class="token comment">// \u540C\u65F6\u4F7F\u7528\u6587\u4EF6\u4E0E\u63A7\u5236\u53F0\u8BB0\u5F55\u65E5\u5FD7</span>
    <span class="token comment">// gin.DefaultWriter = io.MultiWriter(f, os.Stdout)</span>

    router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/ping&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token string">&quot;pong&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8080&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u81EA\u5B9A\u4E49-log-format" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5B9A\u4E49-log-format" aria-hidden="true">#</a> \u81EA\u5B9A\u4E49 log format</h3><h3 id="custom-log-format" tabindex="-1"><a class="header-anchor" href="#custom-log-format" aria-hidden="true">#</a> Custom log format</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	<span class="token comment">// LoggerWithFormatter \u4E2D\u95F4\u4EF6\u5C06 log \u5199\u5165 gin.DefaultWriter</span>
	<span class="token comment">// \u9ED8\u8BA4\u60C5\u51B5\u4E0B gin.DefaultWriter = os.Stdout</span>
	router<span class="token punctuation">.</span><span class="token function">Use</span><span class="token punctuation">(</span>gin<span class="token punctuation">.</span><span class="token function">LoggerWithFormatter</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span>param gin<span class="token punctuation">.</span>LogFormatterParams<span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>

		<span class="token comment">// \u81EA\u5B9A\u4E49\u683C\u5F0F</span>
		<span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;%s - [%s] \\&quot;%s %s %s %d %s \\&quot;%s\\&quot; %s\\&quot;\\n&quot;</span><span class="token punctuation">,</span>
				param<span class="token punctuation">.</span>ClientIP<span class="token punctuation">,</span>
				param<span class="token punctuation">.</span>TimeStamp<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>RFC1123<span class="token punctuation">)</span><span class="token punctuation">,</span>
				param<span class="token punctuation">.</span>Method<span class="token punctuation">,</span>
				param<span class="token punctuation">.</span>Path<span class="token punctuation">,</span>
				param<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>Proto<span class="token punctuation">,</span>
				param<span class="token punctuation">.</span>StatusCode<span class="token punctuation">,</span>
				param<span class="token punctuation">.</span>Latency<span class="token punctuation">,</span>
				param<span class="token punctuation">.</span>Request<span class="token punctuation">.</span><span class="token function">UserAgent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
				param<span class="token punctuation">.</span>ErrorMessage<span class="token punctuation">,</span>
		<span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	router<span class="token punctuation">.</span><span class="token function">Use</span><span class="token punctuation">(</span>gin<span class="token punctuation">.</span><span class="token function">Recovery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

	router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/ping&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token string">&quot;pong&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>

	router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8080&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8F93\u51FA\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>::1 - <span class="token punctuation">[</span>Fri, 07 Dec <span class="token number">2018</span> <span class="token number">17</span>:04:38 JST<span class="token punctuation">]</span> <span class="token string">&quot;GET /ping HTTP/1.1 200 122.767\xB5s &quot;</span>Mozilla/5.0 <span class="token punctuation">(</span>Macintosh<span class="token punctuation">;</span> Intel Mac OS X 10_11_6<span class="token punctuation">)</span> AppleWebKit/537.36 <span class="token punctuation">(</span>KHTML, like Gecko<span class="token punctuation">)</span> Chrome/71.0.3578.80 Safari/537.36<span class="token string">&quot; &quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="controlling-log-output-coloring" tabindex="-1"><a class="header-anchor" href="#controlling-log-output-coloring" aria-hidden="true">#</a> Controlling Log output coloring</h3><p>\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u63A7\u5236\u53F0\u8F93\u51FA\u7684\u65E5\u5FD7\u989C\u8272\u4F9D\u8D56\u4E8E\u68C0\u6D4B\u5230\u7684 TTY\u3002</p><p>\u6C38\u8FDC\u4E0D\u4E3A\u65E5\u5FD7\u7740\u8272:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7981\u7528\u65E5\u5FD7\u989C\u8272</span>
    gin<span class="token punctuation">.</span><span class="token function">DisableConsoleColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u5305\u542B\u9ED8\u8BA4\u4E2D\u95F4\u4EF6\u7684 gin \u8DEF\u7531\u5668:</span>
    <span class="token comment">// logger and recovery (crash-free) middleware</span>
    router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/ping&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token string">&quot;pong&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8080&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u603B\u662F\u4E3A\u65E5\u5FD7\u7740\u8272:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5F3A\u5236\u4F7F\u7528\u65E5\u5FD7\u989C\u8272</span>
    gin<span class="token punctuation">.</span><span class="token function">DisableConsoleColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u5305\u542B\u9ED8\u8BA4\u4E2D\u95F4\u4EF6\u7684 gin \u8DEF\u7531\u5668:</span>
    <span class="token comment">// logger and recovery (crash-free) middleware</span>
    router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/ping&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token string">&quot;pong&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8080&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6A21\u578B\u7ED1\u5B9A\u4E0E\u9A8C\u8BC1" tabindex="-1"><a class="header-anchor" href="#\u6A21\u578B\u7ED1\u5B9A\u4E0E\u9A8C\u8BC1" aria-hidden="true">#</a> \u6A21\u578B\u7ED1\u5B9A\u4E0E\u9A8C\u8BC1</h3><h3 id="model-binding-and-validation" tabindex="-1"><a class="header-anchor" href="#model-binding-and-validation" aria-hidden="true">#</a> Model binding and validation</h3><p>\u4F7F\u7528 model binding \u7ED1\u5B9A\u8BF7\u6C42\u4E3B\u4F53\u5230\u7C7B\u578B\uFF0CGin \u652F\u6301\u7ED1\u5B9A JSON, XML, \u6807\u51C6\u8868\u5355\u3002(foo=bar&amp;boo=baz)</p><p>Gin \u4F7F\u7528 <a href="https://github.com/go-playground/validator" target="_blank" rel="noopener noreferrer"><strong>go-playground/validator.v8</strong></a> \u9A8C\u8BC1\u3002 \u5728 <a href="http://godoc.org/gopkg.in/go-playground/validator.v8#hdr-Baked_In_Validators_and_Tags" target="_blank" rel="noopener noreferrer">\u6B64\u5904</a> \u67E5\u770B\u6709\u5173\u6807\u7B7E\u7528\u6CD5\u7684\u5B8C\u6574\u6587\u6863\u3002</p><p>\u6CE8\u610F\u4F60\u9700\u8981\u5728\u6240\u9700\u8981\u7ED1\u5B9A\u7684\u5B57\u6BB5\u8BBE\u7F6E\u5BF9\u5E94\u7684\u7ED1\u5B9A\u6807\u7B7E\u3002\u4F8B\u5982\uFF0C\u5F53\u4ECE JSON \u7ED1\u5B9A\u65F6\uFF0C\u8BBE\u7F6E <code>json:&quot;fieldname&quot;</code></p><p>Gin \u63D0\u4F9B\u4E24\u79CD\u65B9\u6CD5\u96C6\u7ED1\u5B9A</p><ul><li><strong>Type</strong> - Must bind <ul><li><strong>Methods</strong> - <code>Bind</code>, <code>BindJSON</code>, <code>BindXML</code>, <code>BindQuery</code></li><li><strong>Behavior</strong> - \u8FD9\u4E9B\u65B9\u6CD5\u5E95\u5C42\u4F7F\u7528 <code>MustBindWith</code> \u3002\u5982\u679C\u7ED1\u5B9A\u5931\u8D25\uFF0C\u8BE5\u8BF7\u6C42\u4F1A\u4F7F\u7528 <code>c.AbortWithError(400, err).SetType(ErrorTypeBind)</code> \u4E2D\u6B62\u820D\u5F03\u3002 \u8FD4\u56DE 400 \u72B6\u6001\u7801\uFF0C\u8BBE\u7F6E <code>Content-Type</code> \u9996\u90E8\u4E3A <code>text/plain; charset=utf-8</code>\u3002\u6CE8\u610F\u5982\u679C\u4F60\u5728\u6B64\u540E\u60F3\u8BBE\u7F6E\u72B6\u6001\u72B6\u6001\u7801\uFF0C\u4F1A\u5BFC\u81F4\u4E00\u4E2A \u8B66\u544A <code>[GIN-debug] [WARNING] Headers were already written. Wanted to override status code 400 with 422</code>\u3002 \u5982\u679C\u4F60\u60F3\u66F4\u597D\u5730\u638C\u63A7\u8BE5\u884C\u4E3A\uFF0C\u8003\u8651\u4F7F\u7528 <code>ShouldBind</code> \u65B9\u6CD5\u3002</li></ul></li><li><strong>Type</strong> - Should bind <ul><li><strong>Methods</strong> - <code>ShouldBind</code>, <code>ShouldBindJSON</code>, <code>ShouldBindXML</code>, <code>ShouldBindQuery</code></li><li><strong>Behavior</strong> - \u8FD9\u4E9B\u65B9\u6CD5\u5E95\u5C42\u4F7F\u7528 <code>ShouldBindWith</code>\u3002\u5982\u679C\u7ED1\u5B9A\u5931\u8D25\uFF0C\u7531\u5F00\u53D1\u8005\u638C\u63A7\u5904\u7406\u8BF7\u6C42\u4E0E\u9519\u8BEF\u3002</li></ul></li></ul><p>Gin \u4F1A\u4ECE\u9996\u90E8 <code>Content-Type</code>\u5B57\u6BB5\u63A8\u65AD\u7ED1\u5B9A\u5185\u5BB9\u7684\u7C7B\u578B\uFF0C\u5982\u679C\u4F60\u786E\u5B9A\u9700\u8981\u7ED1\u5B9A\u5185\u5BB9\u7684\u7C7B\u578B\uFF0C\u53EF\u4EE5\u4F7F\u7528 <code>MustBindWith</code> \u6216\u8005 <code>ShouldBindWith</code>\u3002</p><p>\u4F60\u540C\u6837\u53EF\u4EE5\u6307\u5B9A\u7ED1\u5B9A\u5FC5\u987B\u63D0\u4F9B\u7684\u5B57\u6BB5\u3002\u5982\u679C\u4E00\u4E2A\u5E26\u6709 <code>binding:&quot;required&quot;</code> \u6807\u7B7E\u7684\u7C7B\u578B\u7ED1\u5B9A\u65F6\u65E0\u5BF9\u5E94\u503C\uFF0C\u5C06\u8FD4\u56DE\u4E00\u4E2A\u9519\u8BEF\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// Binding from JSON</span>
<span class="token keyword">type</span> Login <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	User     <span class="token builtin">string</span> <span class="token string">\`form:&quot;user&quot; json:&quot;user&quot; xml:&quot;user&quot;  binding:&quot;required&quot;\`</span>
	Password <span class="token builtin">string</span> <span class="token string">\`form:&quot;password&quot; json:&quot;password&quot; xml:&quot;password&quot; binding:&quot;required&quot;\`</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	<span class="token comment">// Example for binding JSON ({&quot;user&quot;: &quot;manu&quot;, &quot;password&quot;: &quot;123&quot;})</span>
	router<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">&quot;/loginJSON&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">var</span> json Login
		<span class="token keyword">if</span> err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">ShouldBindJSON</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>json<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusBadRequest<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">:</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
			<span class="token keyword">return</span>
		<span class="token punctuation">}</span>
		
		<span class="token keyword">if</span> json<span class="token punctuation">.</span>User <span class="token operator">!=</span> <span class="token string">&quot;manu&quot;</span> <span class="token operator">||</span> json<span class="token punctuation">.</span>Password <span class="token operator">!=</span> <span class="token string">&quot;123&quot;</span> <span class="token punctuation">{</span>
			c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusUnauthorized<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">&quot;status&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;unauthorized&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
			<span class="token keyword">return</span>
		<span class="token punctuation">}</span> 
		
		c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">&quot;status&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;you are logged in&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>

	<span class="token comment">// Example for binding XML (</span>
	<span class="token comment">//	&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
	<span class="token comment">//	&lt;root&gt;</span>
	<span class="token comment">//		&lt;user&gt;user&lt;/user&gt;</span>
	<span class="token comment">//		&lt;password&gt;123&lt;/user&gt;</span>
	<span class="token comment">//	&lt;/root&gt;)</span>
	router<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">&quot;/loginXML&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">var</span> xml Login
		<span class="token keyword">if</span> err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">ShouldBindXML</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>xml<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusBadRequest<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">:</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
			<span class="token keyword">return</span>
		<span class="token punctuation">}</span>
		
		<span class="token keyword">if</span> xml<span class="token punctuation">.</span>User <span class="token operator">!=</span> <span class="token string">&quot;manu&quot;</span> <span class="token operator">||</span> xml<span class="token punctuation">.</span>Password <span class="token operator">!=</span> <span class="token string">&quot;123&quot;</span> <span class="token punctuation">{</span>
			c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusUnauthorized<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">&quot;status&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;unauthorized&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
			<span class="token keyword">return</span>
		<span class="token punctuation">}</span> 
		
		c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">&quot;status&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;you are logged in&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>

	<span class="token comment">// Example for binding a HTML form (user=manu&amp;password=123)</span>
	router<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">&quot;/loginForm&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">var</span> form Login
		<span class="token comment">// This will infer what binder to use depending on the content-type header.</span>
		<span class="token keyword">if</span> err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">ShouldBind</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>form<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusBadRequest<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">:</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
			<span class="token keyword">return</span>
		<span class="token punctuation">}</span>
		
		<span class="token keyword">if</span> form<span class="token punctuation">.</span>User <span class="token operator">!=</span> <span class="token string">&quot;manu&quot;</span> <span class="token operator">||</span> form<span class="token punctuation">.</span>Password <span class="token operator">!=</span> <span class="token string">&quot;123&quot;</span> <span class="token punctuation">{</span>
			c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusUnauthorized<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">&quot;status&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;unauthorized&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
			<span class="token keyword">return</span>
		<span class="token punctuation">}</span> 
		
		c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">&quot;status&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;you are logged in&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>

	<span class="token comment">// Listen and serve on 0.0.0.0:8080</span>
	router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8080&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Sample request</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">curl</span> -v -X POST <span class="token punctuation">\\</span>
  http://localhost:8080/loginJSON <span class="token punctuation">\\</span>
  -H <span class="token string">&#39;content-type: application/json&#39;</span> <span class="token punctuation">\\</span>
  -d <span class="token string">&#39;{ &quot;user&quot;: &quot;manu&quot; }&#39;</span>
<span class="token operator">&gt;</span> POST /loginJSON HTTP/1.1
<span class="token operator">&gt;</span> Host: localhost:8080
<span class="token operator">&gt;</span> User-Agent: curl/7.51.0
<span class="token operator">&gt;</span> Accept: */*
<span class="token operator">&gt;</span> content-type: application/json
<span class="token operator">&gt;</span> Content-Length: <span class="token number">18</span>
<span class="token operator">&gt;</span>
* upload completely sent off: <span class="token number">18</span> out of <span class="token number">18</span> bytes
<span class="token operator">&lt;</span> HTTP/1.1 <span class="token number">400</span> Bad Request
<span class="token operator">&lt;</span> Content-Type: application/json<span class="token punctuation">;</span> <span class="token assign-left variable">charset</span><span class="token operator">=</span>utf-8
<span class="token operator">&lt;</span> Date: Fri, 04 Aug <span class="token number">2017</span> 03:51:31 GMT
<span class="token operator">&lt;</span> Content-Length: <span class="token number">100</span>
<span class="token operator">&lt;</span>
<span class="token punctuation">{</span><span class="token string">&quot;error&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Key: &#39;Login.Password&#39; Error:Field validation for &#39;Password&#39; failed on the &#39;required&#39; tag&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u8DF3\u8FC7\u9A8C\u8BC1</strong></p><p>\u4F7F\u7528\u4E0A\u9762\u7684 <code>curl</code> \u547D\u4EE4\uFF0C\u5C06\u8FD4\u56DE\u9519\u8BEF\u3002\u56E0\u4E3A <code>Password</code> \u5B57\u6BB5\u4F7F\u7528\u4E86 <code>binding:&quot;required&quot;</code>\u3002 \u5982\u679C\u4F7F\u7528 <code>binding:&quot;-&quot;</code>\uFF0C\u5219\u4E0D\u4F1A\u8FD4\u56DE\u9519\u8BEF\u3002</p><h3 id="\u81EA\u5B9A\u4E49\u9A8C\u8BC1\u5668" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5B9A\u4E49\u9A8C\u8BC1\u5668" aria-hidden="true">#</a> \u81EA\u5B9A\u4E49\u9A8C\u8BC1\u5668</h3><h3 id="custom-validators" tabindex="-1"><a class="header-anchor" href="#custom-validators" aria-hidden="true">#</a> Custom Validators</h3><p>\u53EF\u4EE5\u6CE8\u518C\u81EA\u5B9A\u4E49\u9A8C\u8BC1\u5668\uFF0C\u67E5\u770B <a href="https://github.com/gin-gonic/examples/blob/master/custom-validation/server.go" target="_blank" rel="noopener noreferrer">example code</a>\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;net/http&quot;</span>
	<span class="token string">&quot;reflect&quot;</span>
	<span class="token string">&quot;time&quot;</span>

	<span class="token string">&quot;github.com/gin-gonic/gin&quot;</span>
	<span class="token string">&quot;github.com/gin-gonic/gin/binding&quot;</span>
	<span class="token string">&quot;gopkg.in/go-playground/validator.v8&quot;</span>
<span class="token punctuation">)</span>

<span class="token comment">// Booking contains binded and validated data.</span>
<span class="token keyword">type</span> Booking <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	CheckIn  time<span class="token punctuation">.</span>Time <span class="token string">\`form:&quot;check_in&quot; binding:&quot;required,bookabledate&quot; time_format:&quot;2006-01-02&quot;\`</span>
	CheckOut time<span class="token punctuation">.</span>Time <span class="token string">\`form:&quot;check_out&quot; binding:&quot;required,gtfield=CheckIn&quot; time_format:&quot;2006-01-02&quot;\`</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">bookableDate</span><span class="token punctuation">(</span>
	v <span class="token operator">*</span>validator<span class="token punctuation">.</span>Validate<span class="token punctuation">,</span> topStruct reflect<span class="token punctuation">.</span>Value<span class="token punctuation">,</span> currentStructOrField reflect<span class="token punctuation">.</span>Value<span class="token punctuation">,</span>
	field reflect<span class="token punctuation">.</span>Value<span class="token punctuation">,</span> fieldType reflect<span class="token punctuation">.</span>Type<span class="token punctuation">,</span> fieldKind reflect<span class="token punctuation">.</span>Kind<span class="token punctuation">,</span> param <span class="token builtin">string</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> date<span class="token punctuation">,</span> ok <span class="token operator">:=</span> field<span class="token punctuation">.</span><span class="token function">Interface</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span>Time<span class="token punctuation">)</span><span class="token punctuation">;</span> ok <span class="token punctuation">{</span>
		today <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token keyword">if</span> today<span class="token punctuation">.</span><span class="token function">Year</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> date<span class="token punctuation">.</span><span class="token function">Year</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> today<span class="token punctuation">.</span><span class="token function">YearDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> date<span class="token punctuation">.</span><span class="token function">YearDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token boolean">false</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	route <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	<span class="token keyword">if</span> v<span class="token punctuation">,</span> ok <span class="token operator">:=</span> binding<span class="token punctuation">.</span>Validator<span class="token punctuation">.</span><span class="token function">Engine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">*</span>validator<span class="token punctuation">.</span>Validate<span class="token punctuation">)</span><span class="token punctuation">;</span> ok <span class="token punctuation">{</span>
		v<span class="token punctuation">.</span><span class="token function">RegisterValidation</span><span class="token punctuation">(</span><span class="token string">&quot;bookabledate&quot;</span><span class="token punctuation">,</span> bookableDate<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	route<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/bookable&quot;</span><span class="token punctuation">,</span> getBookable<span class="token punctuation">)</span>
	route<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8085&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">getBookable</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> b Booking
	<span class="token keyword">if</span> err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">ShouldBindWith</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>b<span class="token punctuation">,</span> binding<span class="token punctuation">.</span>Query<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Booking dates are valid!&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
		c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusBadRequest<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">:</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">curl</span> <span class="token string">&quot;localhost:8085/bookable?check_in=2018-04-16&amp;check_out=2018-04-17&quot;</span>
<span class="token punctuation">{</span><span class="token string">&quot;message&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Booking dates are valid!&quot;</span><span class="token punctuation">}</span>

$ <span class="token function">curl</span> <span class="token string">&quot;localhost:8085/bookable?check_in=2018-03-08&amp;check_out=2018-03-09&quot;</span>
<span class="token punctuation">{</span><span class="token string">&quot;error&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Key: &#39;Booking.CheckIn&#39; Error:Field validation for &#39;CheckIn&#39; failed on the &#39;bookabledate&#39; tag&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="https://github.com/go-playground/validator/releases/tag/v8.7" target="_blank" rel="noopener noreferrer">Struct level validations</a> \u53EF\u4EE5\u540C\u6837\u4EE5\u6B64\u6CE8\u518C\u3002 \u67E5\u770B <a href="https://github.com/gin-gonic/examples/tree/master/struct-lvl-validations" target="_blank" rel="noopener noreferrer">struct-lvl-validation example</a> \u5B66\u4E60\u66F4\u591A\u3002</p><h3 id="\u53EA\u7ED1\u5B9A\u67E5\u8BE2\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#\u53EA\u7ED1\u5B9A\u67E5\u8BE2\u5B57\u7B26\u4E32" aria-hidden="true">#</a> \u53EA\u7ED1\u5B9A\u67E5\u8BE2\u5B57\u7B26\u4E32</h3><h3 id="only-bind-query-string" tabindex="-1"><a class="header-anchor" href="#only-bind-query-string" aria-hidden="true">#</a> Only Bind Query String</h3><p><code>ShouldBindQuery</code> \u65B9\u6CD5\u53EA\u4ECE\u67E5\u8BE2\u5B57\u7B26\u4E32\u7ED1\u5B9A\uFF0C\u800C\u4E0D\u5305\u62EC POST \u65B9\u6CD5\u63D0\u4F9B\u7684\u6570\u636E\u3002 \u67E5\u770B <a href="https://github.com/gin-gonic/gin/issues/742#issuecomment-315953017" target="_blank" rel="noopener noreferrer">detail information</a>\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;log&quot;</span>

	<span class="token string">&quot;github.com/gin-gonic/gin&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">type</span> Person <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	Name    <span class="token builtin">string</span> <span class="token string">\`form:&quot;name&quot;\`</span>
	Address <span class="token builtin">string</span> <span class="token string">\`form:&quot;address&quot;\`</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	route <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	route<span class="token punctuation">.</span><span class="token function">Any</span><span class="token punctuation">(</span><span class="token string">&quot;/testing&quot;</span><span class="token punctuation">,</span> startPage<span class="token punctuation">)</span>
	route<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8085&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">startPage</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> person Person
	<span class="token keyword">if</span> c<span class="token punctuation">.</span><span class="token function">ShouldBindQuery</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>person<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;====== Only Bind By Query String ======&quot;</span><span class="token punctuation">)</span>
		log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span>Name<span class="token punctuation">)</span>
		log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span>Address<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token string">&quot;Success&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7ED1\u5B9A\u67E5\u8BE2\u5B57\u7B26\u4E32\u6216\u8005-post-data" tabindex="-1"><a class="header-anchor" href="#\u7ED1\u5B9A\u67E5\u8BE2\u5B57\u7B26\u4E32\u6216\u8005-post-data" aria-hidden="true">#</a> \u7ED1\u5B9A\u67E5\u8BE2\u5B57\u7B26\u4E32\u6216\u8005 Post Data</h3><h3 id="bind-query-string-or-post-data" tabindex="-1"><a class="header-anchor" href="#bind-query-string-or-post-data" aria-hidden="true">#</a> Bind Query String or Post Data</h3><p>\u67E5\u770B <a href="https://github.com/gin-gonic/gin/issues/742#issuecomment-264681292" target="_blank" rel="noopener noreferrer">detail information</a>\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;log&quot;</span>
	<span class="token string">&quot;time&quot;</span>

	<span class="token string">&quot;github.com/gin-gonic/gin&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">type</span> Person <span class="token keyword">struct</span> <span class="token punctuation">{</span>
        Name       <span class="token builtin">string</span>    <span class="token string">\`form:&quot;name&quot;\`</span>
        Address    <span class="token builtin">string</span>    <span class="token string">\`form:&quot;address&quot;\`</span>
        Birthday   time<span class="token punctuation">.</span>Time <span class="token string">\`form:&quot;birthday&quot; time_format:&quot;2006-01-02&quot; time_utc:&quot;1&quot;\`</span>
        CreateTime time<span class="token punctuation">.</span>Time <span class="token string">\`form:&quot;createTime&quot; time_format:&quot;unixNano&quot;\`</span>
        UnixTime   time<span class="token punctuation">.</span>Time <span class="token string">\`form:&quot;unixTime&quot; time_format:&quot;unix&quot;\`</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	route <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	route<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/testing&quot;</span><span class="token punctuation">,</span> startPage<span class="token punctuation">)</span>
	route<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8085&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">startPage</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">var</span> person Person
	<span class="token comment">// If \`GET\`, only \`Form\` binding engine (\`query\`) used.</span>
	<span class="token comment">// If \`POST\`, first checks the \`content-type\` for \`JSON\` or \`XML\`, then uses \`Form\` (\`form-data\`).</span>
	<span class="token comment">// See more at https://github.com/gin-gonic/gin/blob/master/binding/binding.go#L48</span>
        <span class="token keyword">if</span> c<span class="token punctuation">.</span><span class="token function">ShouldBind</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>person<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
                log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span>Name<span class="token punctuation">)</span>
                log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span>Address<span class="token punctuation">)</span>
                log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span>Birthday<span class="token punctuation">)</span>
                log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span>CreateTime<span class="token punctuation">)</span>
                log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span>UnixTime<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>

	c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token string">&quot;Success&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6D4B\u8BD5:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">curl</span> -X GET <span class="token string">&quot;localhost:8085/testing?name=appleboy&amp;address=xyz&amp;birthday=1992-03-15&amp;createTime=1562400033000000123&amp;unixTime=1562400033&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="\u7ED1\u5B9A-uri" tabindex="-1"><a class="header-anchor" href="#\u7ED1\u5B9A-uri" aria-hidden="true">#</a> \u7ED1\u5B9A Uri</h3><h3 id="bind-uri" tabindex="-1"><a class="header-anchor" href="#bind-uri" aria-hidden="true">#</a> Bind Uri</h3><p>\u67E5\u770B <a href="https://github.com/gin-gonic/gin/issues/846" target="_blank" rel="noopener noreferrer">detail information</a>\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token string">&quot;github.com/gin-gonic/gin&quot;</span>

<span class="token keyword">type</span> Person <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	ID <span class="token builtin">string</span> <span class="token string">\`uri:&quot;id&quot; binding:&quot;required,uuid&quot;\`</span>
	Name <span class="token builtin">string</span> <span class="token string">\`uri:&quot;name&quot; binding:&quot;required&quot;\`</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	route <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	route<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/:name/:id&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">var</span> person Person
		<span class="token keyword">if</span> err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">ShouldBindUri</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>person<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">400</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">&quot;msg&quot;</span><span class="token punctuation">:</span> err<span class="token punctuation">}</span><span class="token punctuation">)</span>
			<span class="token keyword">return</span>
		<span class="token punctuation">}</span>
		c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> person<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> <span class="token string">&quot;uuid&quot;</span><span class="token punctuation">:</span> person<span class="token punctuation">.</span>ID<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	route<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8088&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6D4B\u8BD5:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">curl</span> -v localhost:8088/thinkerou/987fbc97-4bed-5078-9f07-9141ba07c9f3
$ <span class="token function">curl</span> -v localhost:8088/thinkerou/not-uuid
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7ED1\u5B9A-header" tabindex="-1"><a class="header-anchor" href="#\u7ED1\u5B9A-header" aria-hidden="true">#</a> \u7ED1\u5B9A Header</h3><h3 id="bind-header" tabindex="-1"><a class="header-anchor" href="#bind-header" aria-hidden="true">#</a> Bind Header</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;fmt&quot;</span>
	<span class="token string">&quot;github.com/gin-gonic/gin&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">type</span> testHeader <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	Rate   <span class="token builtin">int</span>    <span class="token string">\`header:&quot;Rate&quot;\`</span>
	Domain <span class="token builtin">string</span> <span class="token string">\`header:&quot;Domain&quot;\`</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		h <span class="token operator">:=</span> testHeader<span class="token punctuation">{</span><span class="token punctuation">}</span>

		<span class="token keyword">if</span> err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">ShouldBindHeader</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>h<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>

		fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;%#v\\n&quot;</span><span class="token punctuation">,</span> h<span class="token punctuation">)</span>
		c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">&quot;Rate&quot;</span><span class="token punctuation">:</span> h<span class="token punctuation">.</span>Rate<span class="token punctuation">,</span> <span class="token string">&quot;Domain&quot;</span><span class="token punctuation">:</span> h<span class="token punctuation">.</span>Domain<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>

	r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// client</span>
<span class="token comment">// curl -H &quot;rate:300&quot; -H &quot;domain:music&quot; 127.0.0.1:8080/</span>
<span class="token comment">// output</span>
<span class="token comment">// {&quot;Domain&quot;:&quot;music&quot;,&quot;Rate&quot;:300}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u7ED1\u5B9A-html-\u590D\u9009\u6846" tabindex="-1"><a class="header-anchor" href="#\u7ED1\u5B9A-html-\u590D\u9009\u6846" aria-hidden="true">#</a> \u7ED1\u5B9A HTML \u590D\u9009\u6846</h3><h3 id="bind-html-checkboxes" tabindex="-1"><a class="header-anchor" href="#bind-html-checkboxes" aria-hidden="true">#</a> Bind HTML checkboxes</h3><p>\u67E5\u770B <a href="https://github.com/gin-gonic/gin/issues/129#issuecomment-124260092" target="_blank" rel="noopener noreferrer">detail information</a>\u3002</p><p>main.go</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token operator">...</span>

<span class="token keyword">type</span> myForm <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    Colors <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span> <span class="token string">\`form:&quot;colors[]&quot;\`</span>
<span class="token punctuation">}</span>

<span class="token operator">...</span>

<span class="token keyword">func</span> <span class="token function">formHandler</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> fakeForm myForm
    c<span class="token punctuation">.</span><span class="token function">ShouldBind</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>fakeForm<span class="token punctuation">)</span>
    c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">&quot;color&quot;</span><span class="token punctuation">:</span> fakeForm<span class="token punctuation">.</span>Colors<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token operator">...</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>form.html</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/<span class="token punctuation">&quot;</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>POST<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Check some colors<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>red<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Red<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>colors[]<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>red<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>red<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>green<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Green<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>colors[]<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>green<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>green<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>blue<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Blue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>checkbox<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>colors[]<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>blue<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>blue<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7ED3\u679C:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>{&quot;color&quot;:[&quot;red&quot;,&quot;green&quot;,&quot;blue&quot;]}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="multipart-urlencoded-\u8868\u5355\u7ED1\u5B9A" tabindex="-1"><a class="header-anchor" href="#multipart-urlencoded-\u8868\u5355\u7ED1\u5B9A" aria-hidden="true">#</a> Multipart/Urlencoded \u8868\u5355\u7ED1\u5B9A</h3><h3 id="multipart-urlencoded-binding" tabindex="-1"><a class="header-anchor" href="#multipart-urlencoded-binding" aria-hidden="true">#</a> Multipart/Urlencoded binding</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> ProfileForm <span class="token keyword">struct</span> <span class="token punctuation">{</span>
	Name   <span class="token builtin">string</span>                <span class="token string">\`form:&quot;name&quot; binding:&quot;required&quot;\`</span>
	Avatar <span class="token operator">*</span>multipart<span class="token punctuation">.</span>FileHeader <span class="token string">\`form:&quot;avatar&quot; binding:&quot;required&quot;\`</span>

	<span class="token comment">// or for multiple files</span>
	<span class="token comment">// Avatars []*multipart.FileHeader \`form:&quot;avatar&quot; binding:&quot;required&quot;\`</span>
<span class="token punctuation">}</span>


<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	router<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">&quot;/profile&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// \u4F60\u53EF\u4EE5\u7ED1\u5B9A multipart form \u901A\u8FC7\u660E\u786E\u7684\u7ED1\u5B9A\u58F0\u660E\uFF1A</span>
		<span class="token comment">// c.ShouldBindWith(&amp;form, binding.Form)</span>
		<span class="token comment">// \u6216\u8005\u7B80\u5355\u5730\u4F7F\u7528 ShouldBind method \u81EA\u52A8\u7ED1\u5B9A\uFF1A</span>
		<span class="token keyword">var</span> form ProfileForm
		<span class="token comment">// \u8BE5\u60C5\u51B5\u4E0B gin \u4F1A\u81EA\u52A8\u9009\u62E9\u5408\u9002\u7684\u7ED1\u5B9A\u7C7B\u578B</span>
		<span class="token keyword">if</span> err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">ShouldBind</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>form<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusBadRequest<span class="token punctuation">,</span> <span class="token string">&quot;bad request&quot;</span><span class="token punctuation">)</span>
			<span class="token keyword">return</span>
		<span class="token punctuation">}</span>

		err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">SaveUploadedFile</span><span class="token punctuation">(</span>form<span class="token punctuation">.</span>Avatar<span class="token punctuation">,</span> form<span class="token punctuation">.</span>Avatar<span class="token punctuation">.</span>Filename<span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusInternalServerError<span class="token punctuation">,</span> <span class="token string">&quot;unknown error&quot;</span><span class="token punctuation">)</span>
			<span class="token keyword">return</span>
		<span class="token punctuation">}</span>

        <span class="token comment">// db.Save(&amp;form)</span>

        c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">&quot;ok&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8080&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6D4B\u8BD5:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">curl</span> -X POST -v --form <span class="token assign-left variable">name</span><span class="token operator">=</span>user --form <span class="token string">&quot;avatar=@./avatar.png&quot;</span> http://localhost:8080/profile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="xml-json-yaml-and-protobuf-\u6E32\u67D3" tabindex="-1"><a class="header-anchor" href="#xml-json-yaml-and-protobuf-\u6E32\u67D3" aria-hidden="true">#</a> XML, JSON, YAML and ProtoBuf \u6E32\u67D3</h3><h3 id="xml-json-yaml-and-protobuf-rendering" tabindex="-1"><a class="header-anchor" href="#xml-json-yaml-and-protobuf-rendering" aria-hidden="true">#</a> XML, JSON, YAML and ProtoBuf rendering</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	<span class="token comment">// gin.H \u662F map[string]interface{} \u7684\u5FEB\u6377\u65B9\u6CD5</span>
	r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/someJSON&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;hey&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;status&quot;</span><span class="token punctuation">:</span> http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>

	r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/moreJSON&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// \u4F60\u540C\u6837\u53EF\u4EE5\u4F7F\u7528\u7ED3\u6784\u4F53</span>
		<span class="token keyword">var</span> msg <span class="token keyword">struct</span> <span class="token punctuation">{</span>
			Name    <span class="token builtin">string</span> <span class="token string">\`json:&quot;user&quot;\`</span>
			Message <span class="token builtin">string</span>
			Number  <span class="token builtin">int</span>
		<span class="token punctuation">}</span>
		msg<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;Lena&quot;</span>
		msg<span class="token punctuation">.</span>Message <span class="token operator">=</span> <span class="token string">&quot;hey&quot;</span>
		msg<span class="token punctuation">.</span>Number <span class="token operator">=</span> <span class="token number">123</span>
		<span class="token comment">// \u6CE8\u610F msg.Name \u5728 JSON \u4E2D\u53D8\u6210\u4E86\u7528 &quot;user&quot; \u8868\u793A</span>
		<span class="token comment">// \u8F93\u51FA\uFF1A {&quot;user&quot;: &quot;Lena&quot;, &quot;Message&quot;: &quot;hey&quot;, &quot;Number&quot;: 123}</span>
		c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> msg<span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>

	r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/someXML&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		c<span class="token punctuation">.</span><span class="token function">XML</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;hey&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;status&quot;</span><span class="token punctuation">:</span> http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>

	r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/someYAML&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		c<span class="token punctuation">.</span><span class="token function">YAML</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;hey&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;status&quot;</span><span class="token punctuation">:</span> http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>

	r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/someProtoBuf&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		reps <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int64</span><span class="token punctuation">{</span><span class="token function">int64</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">int64</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
		label <span class="token operator">:=</span> <span class="token string">&quot;test&quot;</span>
		<span class="token comment">// \u8BE5 protobuf \u7684\u5B9A\u4E49\u5728 testdata/protoexample \u6587\u4EF6\u4E2D</span>
		data <span class="token operator">:=</span> <span class="token operator">&amp;</span>protoexample<span class="token punctuation">.</span>Test<span class="token punctuation">{</span>
			Label<span class="token punctuation">:</span> <span class="token operator">&amp;</span>label<span class="token punctuation">,</span>
			Reps<span class="token punctuation">:</span>  reps<span class="token punctuation">,</span>
		<span class="token punctuation">}</span>
		<span class="token comment">// \u6570\u636E\u5728\u54CD\u5E94\u4E2D\u53D8\u6210\u4E8C\u8FDB\u5236\u683C\u5F0F</span>
		<span class="token comment">// \u8F93\u51FAprotoexample.Test protobuf\u5E8F\u5217\u5316\u6570\u636E</span>
		c<span class="token punctuation">.</span><span class="token function">ProtoBuf</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> data<span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>

	<span class="token comment">// Listen and serve on 0.0.0.0:8080</span>
	r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8080&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="securejson" tabindex="-1"><a class="header-anchor" href="#securejson" aria-hidden="true">#</a> SecureJSON</h4><p>\u4F7F\u7528 SecureJSON \u9632\u6B62 JSON \u52AB\u6301. Default prepends <code>&quot;while(1),&quot;</code> to response body if the given struct is array values.</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    
	<span class="token comment">// \u53EF\u4EE5\u4F7F\u7528\u81EA\u5B9A\u4E49\u7684\u5B89\u5168 json \u524D\u7F00</span>
	<span class="token comment">// r.SecureJsonPrefix(&quot;)]}&#39;,\\n&quot;)</span>

	r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/someJSON&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		names <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span><span class="token string">&quot;lena&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;austin&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">}</span>

		<span class="token comment">// \u8F93\u51FA\uFF1A   while(1);[&quot;lena&quot;,&quot;austin&quot;,&quot;foo&quot;]</span>
		c<span class="token punctuation">.</span><span class="token function">SecureJSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> names<span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>

	<span class="token comment">// Listen and serve on 0.0.0.0:8080</span>
	r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8080&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="jsonp" tabindex="-1"><a class="header-anchor" href="#jsonp" aria-hidden="true">#</a> JSONP</h4><h4 id="jsonp-1" tabindex="-1"><a class="header-anchor" href="#jsonp-1" aria-hidden="true">#</a> JSONP</h4><p>\u4F7F\u7528 JSONP \u8BF7\u6C42\u6765\u81EA\u4E0D\u540C\u57DF\u540D\u4E2D\u7684\u670D\u52A1\u5668\u7684\u6570\u636E\u3002\u5982\u679C\u5B58\u5728\u67E5\u8BE2\u53C2\u6570\u56DE\u8C03\uFF0C\u5219\u5C06\u56DE\u8C03\u6DFB\u52A0\u5230\u54CD\u5E94\u4F53</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/JSONP&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		data <span class="token operator">:=</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span>
			<span class="token string">&quot;foo&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">,</span>
		<span class="token punctuation">}</span>

		<span class="token comment">//callback is x</span>
		<span class="token comment">// Will output  :   x({\\&quot;foo\\&quot;:\\&quot;bar\\&quot;})</span>
		c<span class="token punctuation">.</span><span class="token function">JSONP</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> data<span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>

	<span class="token comment">// Listen and serve on 0.0.0.0:8080</span>
	r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8080&quot;</span><span class="token punctuation">)</span>

        <span class="token comment">// client</span>
        <span class="token comment">// curl http://127.0.0.1:8080/JSONP?callback=x</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="asciijson" tabindex="-1"><a class="header-anchor" href="#asciijson" aria-hidden="true">#</a> AsciiJSON</h4><p>\u4F7F\u7528 AsciiJSON \u751F\u6210\u53EA\u7531 ASCII \u7F16\u7801\u7684 JSON \u5B57\u7B26\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/someJSON&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		data <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">{</span>
			<span class="token string">&quot;lang&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;GO\u8BED\u8A00&quot;</span><span class="token punctuation">,</span>
			<span class="token string">&quot;tag&quot;</span><span class="token punctuation">:</span>  <span class="token string">&quot;&lt;br&gt;&quot;</span><span class="token punctuation">,</span>
		<span class="token punctuation">}</span>

		<span class="token comment">// will output : {&quot;lang&quot;:&quot;GO\\u8bed\\u8a00&quot;,&quot;tag&quot;:&quot;\\u003cbr\\u003e&quot;}</span>
		c<span class="token punctuation">.</span><span class="token function">AsciiJSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> data<span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>

	<span class="token comment">// Listen and serve on 0.0.0.0:8080</span>
	r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8080&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="purejson" tabindex="-1"><a class="header-anchor" href="#purejson" aria-hidden="true">#</a> PureJSON</h4><p>Normally, JSON replaces special HTML characters with their unicode entities, e.g. <code>&lt;</code> becomes <code>\\u003c</code>. If you want to encode such characters literally, you can use PureJSON instead. This feature is unavailable in Go 1.6 and lower.</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	
	<span class="token comment">// Serves unicode entities</span>
	r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/json&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span>
			<span class="token string">&quot;html&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;&lt;b&gt;Hello, world!&lt;/b&gt;&quot;</span><span class="token punctuation">,</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	
	<span class="token comment">// Serves literal characters</span>
	r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/purejson&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		c<span class="token punctuation">.</span><span class="token function">PureJSON</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span>
			<span class="token string">&quot;html&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;&lt;b&gt;Hello, world!&lt;/b&gt;&quot;</span><span class="token punctuation">,</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	
	<span class="token comment">// listen and serve on 0.0.0.0:8080</span>
	r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span>&quot;<span class="token punctuation">:</span><span class="token number">8080</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u63D0\u4F9B\u9759\u6001\u6587\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u63D0\u4F9B\u9759\u6001\u6587\u4EF6" aria-hidden="true">#</a> \u63D0\u4F9B\u9759\u6001\u6587\u4EF6</h3><h3 id="serving-static-files" tabindex="-1"><a class="header-anchor" href="#serving-static-files" aria-hidden="true">#</a> Serving static files</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	router<span class="token punctuation">.</span><span class="token function">Static</span><span class="token punctuation">(</span><span class="token string">&quot;/assets&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;./assets&quot;</span><span class="token punctuation">)</span>
	router<span class="token punctuation">.</span><span class="token function">StaticFS</span><span class="token punctuation">(</span><span class="token string">&quot;/more_static&quot;</span><span class="token punctuation">,</span> http<span class="token punctuation">.</span><span class="token function">Dir</span><span class="token punctuation">(</span><span class="token string">&quot;my_file_system&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	router<span class="token punctuation">.</span><span class="token function">StaticFile</span><span class="token punctuation">(</span><span class="token string">&quot;/favicon.ico&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;./resources/favicon.ico&quot;</span><span class="token punctuation">)</span>

	<span class="token comment">// Listen and serve on 0.0.0.0:8080</span>
	router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8080&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="serving-data-from-reader" tabindex="-1"><a class="header-anchor" href="#serving-data-from-reader" aria-hidden="true">#</a> Serving data from reader</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/someDataFromReader&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		response<span class="token punctuation">,</span> err <span class="token operator">:=</span> http<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;https://raw.githubusercontent.com/gin-gonic/logo/master/color.png&quot;</span><span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token operator">||</span> response<span class="token punctuation">.</span>StatusCode <span class="token operator">!=</span> http<span class="token punctuation">.</span>StatusOK <span class="token punctuation">{</span>
			c<span class="token punctuation">.</span><span class="token function">Status</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusServiceUnavailable<span class="token punctuation">)</span>
			<span class="token keyword">return</span>
		<span class="token punctuation">}</span>

		reader <span class="token operator">:=</span> response<span class="token punctuation">.</span>Body
		contentLength <span class="token operator">:=</span> response<span class="token punctuation">.</span>ContentLength
		contentType <span class="token operator">:=</span> response<span class="token punctuation">.</span>Header<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">)</span>

		extraHeaders <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token builtin">string</span><span class="token punctuation">{</span>
			<span class="token string">&quot;Content-Disposition&quot;</span><span class="token punctuation">:</span> <span class="token string">\`attachment; filename=&quot;gopher.png&quot;\`</span><span class="token punctuation">,</span>
		<span class="token punctuation">}</span>

		c<span class="token punctuation">.</span><span class="token function">DataFromReader</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> contentLength<span class="token punctuation">,</span> contentType<span class="token punctuation">,</span> reader<span class="token punctuation">,</span> extraHeaders<span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8080&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="html-\u6E32\u67D3" tabindex="-1"><a class="header-anchor" href="#html-\u6E32\u67D3" aria-hidden="true">#</a> HTML \u6E32\u67D3</h3><h3 id="html-rendering" tabindex="-1"><a class="header-anchor" href="#html-rendering" aria-hidden="true">#</a> HTML rendering</h3><p>\u4F7F\u7528 <code>LoadHTMLGlob()</code> \u6216\u8005 <code>LoadHTMLFiles()</code></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	
	<span class="token comment">// \u52A0\u8F7D\u6240\u6709\u7684\u6A21\u677F\u6587\u4EF6</span>
	router<span class="token punctuation">.</span><span class="token function">LoadHTMLGlob</span><span class="token punctuation">(</span><span class="token string">&quot;templates/*&quot;</span><span class="token punctuation">)</span>

	<span class="token comment">// \u52A0\u8F7D\u67D0\u4E2A\u6A21\u677F\u6587\u4EF6</span>
	<span class="token comment">// router.LoadHTMLFiles(&quot;templates/template1.html&quot;, &quot;templates/template2.html&quot;)</span>
	
	router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/index&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		c<span class="token punctuation">.</span><span class="token function">HTML</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">&quot;index.tmpl&quot;</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span>
			<span class="token string">&quot;title&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Main website&quot;</span><span class="token punctuation">,</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8080&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>templates/index.tmpl</code></p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>
		{{ .title }}
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u6E32\u67D3\u539F\u751F-html" tabindex="-1"><a class="header-anchor" href="#\u6E32\u67D3\u539F\u751F-html" aria-hidden="true">#</a> \u6E32\u67D3\u539F\u751F HTML</h4><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>g<span class="token punctuation">.</span><span class="token function">LoagHTMLFiles</span><span class="token punctuation">(</span>filepath<span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span>staticPath<span class="token punctuation">,</span> <span class="token string">&quot;index.html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    c<span class="token punctuation">.</span><span class="token function">HTML</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">&quot;index.html&quot;</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// \u6216\u8005</span>
router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   c<span class="token punctuation">.</span><span class="token function">File</span><span class="token punctuation">(</span>filepath<span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span>staticPath<span class="token punctuation">,</span> <span class="token string">&quot;index.html&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u4F7F\u7528\u4E0D\u540C\u6587\u4EF6\u5939\u76F8\u540C\u540D\u79F0\u7684-html-\u6A21\u677F" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u4E0D\u540C\u6587\u4EF6\u5939\u76F8\u540C\u540D\u79F0\u7684-html-\u6A21\u677F" aria-hidden="true">#</a> \u4F7F\u7528\u4E0D\u540C\u6587\u4EF6\u5939\u76F8\u540C\u540D\u79F0\u7684 HTML \u6A21\u677F</h4><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	router<span class="token punctuation">.</span><span class="token function">LoadHTMLGlob</span><span class="token punctuation">(</span><span class="token string">&quot;templates/**/*&quot;</span><span class="token punctuation">)</span>
	router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/posts/index&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		c<span class="token punctuation">.</span><span class="token function">HTML</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">&quot;posts/index.tmpl&quot;</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span>
			<span class="token string">&quot;title&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Posts&quot;</span><span class="token punctuation">,</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/users/index&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		c<span class="token punctuation">.</span><span class="token function">HTML</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">&quot;users/index.tmpl&quot;</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span>
			<span class="token string">&quot;title&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Users&quot;</span><span class="token punctuation">,</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8080&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>templates/posts/index.tmpl</code></p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>{{ define &quot;posts/index.tmpl&quot; }}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>
	{{ .title }}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Using posts/index.tmpl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
{{ end }}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>templates/users/index.tmpl</code></p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>{{ define &quot;users/index.tmpl&quot; }}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>
	{{ .title }}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Using users/index.tmpl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
{{ end }}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u81EA\u5B9A\u4E49\u6A21\u677F\u6E32\u67D3\u5668" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5B9A\u4E49\u6A21\u677F\u6E32\u67D3\u5668" aria-hidden="true">#</a> \u81EA\u5B9A\u4E49\u6A21\u677F\u6E32\u67D3\u5668</h4><p>\u53EF\u4EE5\u4F7F\u7528\u81EA\u5B9A\u4E49 HTML \u6A21\u677F\u6E32\u67D3\u5668</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">import</span> <span class="token string">&quot;html/template&quot;</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	html <span class="token operator">:=</span> template<span class="token punctuation">.</span><span class="token function">Must</span><span class="token punctuation">(</span>template<span class="token punctuation">.</span><span class="token function">ParseFiles</span><span class="token punctuation">(</span><span class="token string">&quot;file1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;file2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	router<span class="token punctuation">.</span><span class="token function">SetHTMLTemplate</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span>
	router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8080&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u81EA\u5B9A\u4E49\u5206\u9694\u7B26" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5B9A\u4E49\u5206\u9694\u7B26" aria-hidden="true">#</a> \u81EA\u5B9A\u4E49\u5206\u9694\u7B26</h4><p>\u53EF\u4EE5\u81EA\u5B9A\u4E49\u5206\u9694\u7B26</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>	r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	r<span class="token punctuation">.</span><span class="token function">Delims</span><span class="token punctuation">(</span><span class="token string">&quot;{[{&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;}]}&quot;</span><span class="token punctuation">)</span>
	r<span class="token punctuation">.</span><span class="token function">LoadHTMLGlob</span><span class="token punctuation">(</span><span class="token string">&quot;/path/to/templates&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u81EA\u5B9A\u4E49\u6A21\u677F\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5B9A\u4E49\u6A21\u677F\u51FD\u6570" aria-hidden="true">#</a> \u81EA\u5B9A\u4E49\u6A21\u677F\u51FD\u6570</h4><p>\u67E5\u770B\u7EC6\u8282 <a href="https://github.com/gin-gonic/examples/tree/master/template" target="_blank" rel="noopener noreferrer">example code</a>.</p><p><code>main.go</code></p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
    <span class="token string">&quot;html/template&quot;</span>
    <span class="token string">&quot;net/http&quot;</span>
    <span class="token string">&quot;time&quot;</span>

    <span class="token string">&quot;github.com/gin-gonic/gin&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">formatAsDate</span><span class="token punctuation">(</span>t time<span class="token punctuation">.</span>Time<span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
    year<span class="token punctuation">,</span> month<span class="token punctuation">,</span> day <span class="token operator">:=</span> t<span class="token punctuation">.</span><span class="token function">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;%d%02d/%02d&quot;</span><span class="token punctuation">,</span> year<span class="token punctuation">,</span> month<span class="token punctuation">,</span> day<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    router<span class="token punctuation">.</span><span class="token function">Delims</span><span class="token punctuation">(</span><span class="token string">&quot;{[{&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;}]}&quot;</span><span class="token punctuation">)</span>
    router<span class="token punctuation">.</span><span class="token function">SetFuncMap</span><span class="token punctuation">(</span>template<span class="token punctuation">.</span>FuncMap<span class="token punctuation">{</span>
        <span class="token string">&quot;formatAsDate&quot;</span><span class="token punctuation">:</span> formatAsDate<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    router<span class="token punctuation">.</span><span class="token function">LoadHTMLFiles</span><span class="token punctuation">(</span><span class="token string">&quot;./testdata/template/raw.tmpl&quot;</span><span class="token punctuation">)</span>

    router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/raw&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        c<span class="token punctuation">.</span><span class="token function">HTML</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">&quot;raw.tmpl&quot;</span><span class="token punctuation">,</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">{</span>
            <span class="token string">&quot;now&quot;</span><span class="token punctuation">:</span> time<span class="token punctuation">.</span><span class="token function">Date</span><span class="token punctuation">(</span><span class="token number">2017</span><span class="token punctuation">,</span> <span class="token number">07</span><span class="token punctuation">,</span> <span class="token number">01</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> time<span class="token punctuation">.</span>UTC<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8080&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>raw.tmpl</code></p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code>Date: {[{.now | formatAsDate}]}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u663E\u793A\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Date: 2017/07/01
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="\u591A\u6A21\u677F" tabindex="-1"><a class="header-anchor" href="#\u591A\u6A21\u677F" aria-hidden="true">#</a> \u591A\u6A21\u677F</h3><h3 id="multitemplate" tabindex="-1"><a class="header-anchor" href="#multitemplate" aria-hidden="true">#</a> Multitemplate</h3><p>Gin \u9ED8\u8BA4\u60C5\u51B5\u4E0B\u53EA\u5141\u8BB8\u4F7F\u7528\u4E00\u4E2A\u6A21\u677F\u6587\u4EF6. \u70B9\u51FB <a href="https://github.com/gin-contrib/multitemplate" target="_blank" rel="noopener noreferrer">\u8FD9\u91CC</a> \u770B\u5982\u4F55\u4F7F\u7528\u5982 go 1.6 <code>block template</code> \u6765\u5B9E\u73B0\u591A\u6A21\u677F\u6E32\u67D3.</p><h3 id="\u91CD\u5B9A\u5411" tabindex="-1"><a class="header-anchor" href="#\u91CD\u5B9A\u5411" aria-hidden="true">#</a> \u91CD\u5B9A\u5411</h3><h3 id="redirects" tabindex="-1"><a class="header-anchor" href="#redirects" aria-hidden="true">#</a> Redirects</h3><p>\u53D1\u8D77\u4E00\u4E2A HTTP \u91CD\u5B9A\u5411\u5F88\u5BB9\u6613\uFF0C\u652F\u6301\u5185\u90E8\u4E0E\u5916\u90E8\u94FE\u63A5\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/test&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	c<span class="token punctuation">.</span><span class="token function">Redirect</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusMovedPermanently<span class="token punctuation">,</span> <span class="token string">&quot;http://www.google.com/&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53D1\u8D77\u4E00\u4E2A\u8DEF\u7531\u91CD\u5B9A\u5411\uFF0C\u4F7F\u7528 <code>HandleContext</code>\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/test&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Path <span class="token operator">=</span> <span class="token string">&quot;/test2&quot;</span>
    r<span class="token punctuation">.</span><span class="token function">HandleContext</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/test2&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;world&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u81EA\u5B9A\u4E49\u4E2D\u95F4\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5B9A\u4E49\u4E2D\u95F4\u4EF6" aria-hidden="true">#</a> \u81EA\u5B9A\u4E49\u4E2D\u95F4\u4EF6</h3><h3 id="custom-middleware" tabindex="-1"><a class="header-anchor" href="#custom-middleware" aria-hidden="true">#</a> Custom Middleware</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">Logger</span><span class="token punctuation">(</span><span class="token punctuation">)</span> gin<span class="token punctuation">.</span>HandlerFunc <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		t <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

		<span class="token comment">// \u8BBE\u7F6E\u53D8\u91CFexample</span>
		c<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">&quot;example&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;12345&quot;</span><span class="token punctuation">)</span>

		<span class="token comment">// \u8BF7\u6C42\u4E4B\u524D</span>

		c<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

		<span class="token comment">// \u8BF7\u6C42\u4E4B\u540E</span>
		latency <span class="token operator">:=</span> time<span class="token punctuation">.</span><span class="token function">Since</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>
		log<span class="token punctuation">.</span><span class="token function">Print</span><span class="token punctuation">(</span>latency<span class="token punctuation">)</span>

		<span class="token comment">// \u8BBF\u95EE\u6211\u4EEC\u53D1\u9001\u7684\u72B6\u6001</span>
		status <span class="token operator">:=</span> c<span class="token punctuation">.</span>Writer<span class="token punctuation">.</span><span class="token function">Status</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	r<span class="token punctuation">.</span><span class="token function">Use</span><span class="token punctuation">(</span><span class="token function">Logger</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

	r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/test&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		example <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">MustGet</span><span class="token punctuation">(</span><span class="token string">&quot;example&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">)</span>

		<span class="token comment">// it would print: &quot;12345&quot;</span>
		log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>example<span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>

	<span class="token comment">// Listen and serve on 0.0.0.0:8080</span>
	r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8080&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4F7F\u7528-basicauth-\u4E2D\u95F4\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528-basicauth-\u4E2D\u95F4\u4EF6" aria-hidden="true">#</a> \u4F7F\u7528 BasicAuth() \u4E2D\u95F4\u4EF6</h3><h3 id="using-basicauth-middleware" tabindex="-1"><a class="header-anchor" href="#using-basicauth-middleware" aria-hidden="true">#</a> Using BasicAuth middleware</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// \u6A21\u62DF\u9690\u79C1\u6570\u636E</span>
<span class="token keyword">var</span> secrets <span class="token operator">=</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span>
	<span class="token string">&quot;foo&quot;</span><span class="token punctuation">:</span>    gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">&quot;email&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;foo@bar.com&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;phone&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;123433&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token string">&quot;austin&quot;</span><span class="token punctuation">:</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">&quot;email&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;austin@example.com&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;phone&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;666&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token string">&quot;lena&quot;</span><span class="token punctuation">:</span>   gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">&quot;email&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;lena@guapa.com&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;phone&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;523443&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	<span class="token comment">// \u4E0B\u9762\u5206\u7EC4\u4F7F\u7528 gin.BasicAuth() \u4E2D\u95F4\u4EF6</span>
	<span class="token comment">// gin.Accounts\u662Fmap[string]string\u7684\u5FEB\u6377\u65B9\u6CD5</span>
	authorized <span class="token operator">:=</span> r<span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">&quot;/admin&quot;</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span><span class="token function">BasicAuth</span><span class="token punctuation">(</span>gin<span class="token punctuation">.</span>Accounts<span class="token punctuation">{</span>
		<span class="token string">&quot;foo&quot;</span><span class="token punctuation">:</span>    <span class="token string">&quot;bar&quot;</span><span class="token punctuation">,</span>
		<span class="token string">&quot;austin&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;1234&quot;</span><span class="token punctuation">,</span>
		<span class="token string">&quot;lena&quot;</span><span class="token punctuation">:</span>   <span class="token string">&quot;hello2&quot;</span><span class="token punctuation">,</span>
		<span class="token string">&quot;manu&quot;</span><span class="token punctuation">:</span>   <span class="token string">&quot;4321&quot;</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

	<span class="token comment">// /admin/secrets \u7AEF\u70B9</span>
	<span class="token comment">// \u70B9\u51FB\u8BBF\u95EE &quot;localhost:8080/admin/secrets</span>
	authorized<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/secrets&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// \u83B7\u53D6\u7528\u6237,\u7531BasicAuth middleware\u4EE3\u7406\u8BBE\u7F6E</span>
		user <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">MustGet</span><span class="token punctuation">(</span>gin<span class="token punctuation">.</span>AuthUserKey<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token builtin">string</span><span class="token punctuation">)</span>
		<span class="token keyword">if</span> secret<span class="token punctuation">,</span> ok <span class="token operator">:=</span> secrets<span class="token punctuation">[</span>user<span class="token punctuation">]</span><span class="token punctuation">;</span> ok <span class="token punctuation">{</span>
			c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">:</span> user<span class="token punctuation">,</span> <span class="token string">&quot;secret&quot;</span><span class="token punctuation">:</span> secret<span class="token punctuation">}</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">:</span> user<span class="token punctuation">,</span> <span class="token string">&quot;secret&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;NO SECRET :(&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>

	<span class="token comment">// Listen and serve on 0.0.0.0:8080</span>
	r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8080&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4E2D\u95F4\u4EF6\u4E2D\u7684\u534F\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u4E2D\u95F4\u4EF6\u4E2D\u7684\u534F\u7A0B" aria-hidden="true">#</a> \u4E2D\u95F4\u4EF6\u4E2D\u7684\u534F\u7A0B</h3><h3 id="goroutines-inside-a-middleware" tabindex="-1"><a class="header-anchor" href="#goroutines-inside-a-middleware" aria-hidden="true">#</a> Goroutines inside a middleware</h3><p>\u5728\u4E2D\u95F4\u4EF6\u6216\u8005\u5904\u7406\u5668\u4E2D\u5F00\u542F\u534F\u7A0B\u65F6\uFF0C<strong>\u4E0D\u5E94</strong>\u4F7F\u7528\u539F\u6765\u7684 context \u4E0A\u4E0B\u6587\uFF0C\u53EA\u53EF\u4EE5\u4F7F\u7528\u4E00\u4E2A\u53EA\u8BFB\u7684\u526F\u672C\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/long_async&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// \u521B\u5EFA\u526F\u672C\u7528\u4E8E\u534F\u7A0B\u4E4B\u4E2D</span>
		cCp <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Copy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// \u5047\u8BBE\u4E00\u4E2A\u8FD0\u884C5\u79D2\u7684\u4EFB\u52A1</span>
			time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>

			<span class="token comment">// \u6CE8\u610F\u4F60\u5728\u4F7F\u7528context\u7684\u526F\u672C</span>
			log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Done! in path &quot;</span> <span class="token operator">+</span> cCp<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Path<span class="token punctuation">)</span>
		<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>

	r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/long_sync&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// \u5047\u8BBE\u4E00\u4E2A\u8FD0\u884C5\u79D2\u7684\u4EFB\u52A1</span>
		time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>

		<span class="token comment">// \u4E0D\u5728\u534F\u7A0B\u4E2D\uFF0C\u53EF\u76F4\u63A5\u4F7F\u7528context</span>
		log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Done! in path &quot;</span> <span class="token operator">+</span> c<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>URL<span class="token punctuation">.</span>Path<span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>

	<span class="token comment">// Listen and serve on 0.0.0.0:8080</span>
	r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8080&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u81EA\u5B9A\u4E49-http-\u914D\u7F6E" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5B9A\u4E49-http-\u914D\u7F6E" aria-hidden="true">#</a> \u81EA\u5B9A\u4E49 HTTP \u914D\u7F6E</h3><h3 id="custom-http-configuration" tabindex="-1"><a class="header-anchor" href="#custom-http-configuration" aria-hidden="true">#</a> Custom HTTP configuration</h3><p>\u76F4\u63A5\u4F7F\u7528 <code>http.ListenAndServe()</code> \u5982\u4E0B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	http<span class="token punctuation">.</span><span class="token function">ListenAndServe</span><span class="token punctuation">(</span><span class="token string">&quot;:8080&quot;</span><span class="token punctuation">,</span> router<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6216\u8005</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	s <span class="token operator">:=</span> <span class="token operator">&amp;</span>http<span class="token punctuation">.</span>Server<span class="token punctuation">{</span>
		Addr<span class="token punctuation">:</span>           <span class="token string">&quot;:8080&quot;</span><span class="token punctuation">,</span>
		Handler<span class="token punctuation">:</span>        router<span class="token punctuation">,</span>
		ReadTimeout<span class="token punctuation">:</span>    <span class="token number">10</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span>
		WriteTimeout<span class="token punctuation">:</span>   <span class="token number">10</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span>
		MaxHeaderBytes<span class="token punctuation">:</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">20</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>
	s<span class="token punctuation">.</span><span class="token function">ListenAndServe</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="support-let-s-encrypt" tabindex="-1"><a class="header-anchor" href="#support-let-s-encrypt" aria-hidden="true">#</a> Support Let&#39;s Encrypt</h3><p>example for 1-line LetsEncrypt HTTPS servers.</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;log&quot;</span>

	<span class="token string">&quot;github.com/gin-gonic/autotls&quot;</span>
	<span class="token string">&quot;github.com/gin-gonic/gin&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	<span class="token comment">// Ping handler</span>
	r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/ping&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token string">&quot;pong&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>

	log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>autotls<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> <span class="token string">&quot;example1.com&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;example2.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u81EA\u5B9A\u4E49 autocert \u7BA1\u7406\u5668\u7684\u793A\u4F8B.</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;log&quot;</span>

	<span class="token string">&quot;github.com/gin-gonic/autotls&quot;</span>
	<span class="token string">&quot;github.com/gin-gonic/gin&quot;</span>
	<span class="token string">&quot;golang.org/x/crypto/acme/autocert&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	<span class="token comment">// Ping handler</span>
	r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/ping&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token string">&quot;pong&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>

	m <span class="token operator">:=</span> autocert<span class="token punctuation">.</span>Manager<span class="token punctuation">{</span>
		Prompt<span class="token punctuation">:</span>     autocert<span class="token punctuation">.</span>AcceptTOS<span class="token punctuation">,</span>
		HostPolicy<span class="token punctuation">:</span> autocert<span class="token punctuation">.</span><span class="token function">HostWhitelist</span><span class="token punctuation">(</span><span class="token string">&quot;example1.com&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;example2.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		Cache<span class="token punctuation">:</span>      autocert<span class="token punctuation">.</span><span class="token function">DirCache</span><span class="token punctuation">(</span><span class="token string">&quot;/var/www/.cache&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token punctuation">}</span>

	log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>autotls<span class="token punctuation">.</span><span class="token function">RunWithManager</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> <span class="token operator">&amp;</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4F7F\u7528-gin-\u8FD0\u884C\u591A\u670D\u52A1" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528-gin-\u8FD0\u884C\u591A\u670D\u52A1" aria-hidden="true">#</a> \u4F7F\u7528 Gin \u8FD0\u884C\u591A\u670D\u52A1</h3><h3 id="run-multiple-service-using-gin" tabindex="-1"><a class="header-anchor" href="#run-multiple-service-using-gin" aria-hidden="true">#</a> Run multiple service using Gin</h3><p>\u8BF7\u53C2\u9605 <a href="https://github.com/gin-gonic/gin/issues/346" target="_blank" rel="noopener noreferrer">\u95EE\u9898</a> \u5E76\u5C1D\u8BD5\u4EE5\u4E0B\u793A\u4F8B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;log&quot;</span>
	<span class="token string">&quot;net/http&quot;</span>
	<span class="token string">&quot;time&quot;</span>

	<span class="token string">&quot;github.com/gin-gonic/gin&quot;</span>
	<span class="token string">&quot;golang.org/x/sync/errgroup&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">var</span> <span class="token punctuation">(</span>
	g errgroup<span class="token punctuation">.</span>Group
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">router01</span><span class="token punctuation">(</span><span class="token punctuation">)</span> http<span class="token punctuation">.</span>Handler <span class="token punctuation">{</span>
	e <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	e<span class="token punctuation">.</span><span class="token function">Use</span><span class="token punctuation">(</span>gin<span class="token punctuation">.</span><span class="token function">Recovery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	e<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>
			http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span>
			gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span>
				<span class="token string">&quot;code&quot;</span><span class="token punctuation">:</span>  http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span>
				<span class="token string">&quot;error&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Welcome server 01&quot;</span><span class="token punctuation">,</span>
			<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>

	<span class="token keyword">return</span> e
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">router02</span><span class="token punctuation">(</span><span class="token punctuation">)</span> http<span class="token punctuation">.</span>Handler <span class="token punctuation">{</span>
	e <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	e<span class="token punctuation">.</span><span class="token function">Use</span><span class="token punctuation">(</span>gin<span class="token punctuation">.</span><span class="token function">Recovery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	e<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>
			http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span>
			gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span>
				<span class="token string">&quot;code&quot;</span><span class="token punctuation">:</span>  http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span>
				<span class="token string">&quot;error&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Welcome server 02&quot;</span><span class="token punctuation">,</span>
			<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>

	<span class="token keyword">return</span> e
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	server01 <span class="token operator">:=</span> <span class="token operator">&amp;</span>http<span class="token punctuation">.</span>Server<span class="token punctuation">{</span>
		Addr<span class="token punctuation">:</span>         <span class="token string">&quot;:8080&quot;</span><span class="token punctuation">,</span>
		Handler<span class="token punctuation">:</span>      <span class="token function">router01</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		ReadTimeout<span class="token punctuation">:</span>  <span class="token number">5</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span>
		WriteTimeout<span class="token punctuation">:</span> <span class="token number">10</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span>
	<span class="token punctuation">}</span>

	server02 <span class="token operator">:=</span> <span class="token operator">&amp;</span>http<span class="token punctuation">.</span>Server<span class="token punctuation">{</span>
		Addr<span class="token punctuation">:</span>         <span class="token string">&quot;:8081&quot;</span><span class="token punctuation">,</span>
		Handler<span class="token punctuation">:</span>      <span class="token function">router02</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		ReadTimeout<span class="token punctuation">:</span>  <span class="token number">5</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span>
		WriteTimeout<span class="token punctuation">:</span> <span class="token number">10</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">,</span>
	<span class="token punctuation">}</span>

	g<span class="token punctuation">.</span><span class="token function">Go</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> server01<span class="token punctuation">.</span><span class="token function">ListenAndServe</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>

	g<span class="token punctuation">.</span><span class="token function">Go</span><span class="token punctuation">(</span><span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> server02<span class="token punctuation">.</span><span class="token function">ListenAndServe</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>

	<span class="token keyword">if</span> err <span class="token operator">:=</span> g<span class="token punctuation">.</span><span class="token function">Wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4F18\u96C5\u91CD\u542F\u6216\u505C\u6B62" tabindex="-1"><a class="header-anchor" href="#\u4F18\u96C5\u91CD\u542F\u6216\u505C\u6B62" aria-hidden="true">#</a> \u4F18\u96C5\u91CD\u542F\u6216\u505C\u6B62</h3><h3 id="graceful-restart-or-stop" tabindex="-1"><a class="header-anchor" href="#graceful-restart-or-stop" aria-hidden="true">#</a> Graceful restart or stop</h3><p>\u4EE5\u4E0B\u65B9\u5F0F\u53EF\u4EE5\u8BA9\u4F60\u4F18\u96C5\u7684\u91CD\u542F\u6216\u505C\u6B62\u4F60\u7684 web \u670D\u52A1\u5668\u3002</p><p>\u6211\u4EEC\u53EF\u4EE5\u7528 <a href="https://github.com/fvbock/endless" target="_blank" rel="noopener noreferrer">fvbock/endless</a> \u53D6\u4EE3\u9ED8\u8BA4\u7684 <code>ListenAndServe</code>\u3002 \u8BF7\u53C2\u9605 <a href="https://github.com/gin-gonic/gin/issues/296" target="_blank" rel="noopener noreferrer">\u95EE\u9898 #296</a> \u83B7\u5F97\u66F4\u591A\u7EC6\u8282.</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code>router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> handler<span class="token punctuation">)</span>
<span class="token comment">// [...]</span>
endless<span class="token punctuation">.</span><span class="token function">ListenAndServe</span><span class="token punctuation">(</span><span class="token string">&quot;:4242&quot;</span><span class="token punctuation">,</span> router<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>endless \u7684\u66FF\u4EE3\u54C1:</p><ul><li><a href="https://github.com/braintree/manners" target="_blank" rel="noopener noreferrer">manners</a>: A polite Go HTTP server that shuts down gracefully.</li><li><a href="https://github.com/tylerb/graceful" target="_blank" rel="noopener noreferrer">graceful</a>: Graceful is a Go package enabling graceful shutdown of an http.Handler server.</li><li><a href="https://github.com/facebookgo/grace" target="_blank" rel="noopener noreferrer">grace</a>: Graceful restart &amp; zero downtime deploy for Go servers.</li></ul><p>\u5982\u679C\u4F60\u5728\u4F7F\u7528 Go 1.8\uFF0C\u4F60\u53EF\u80FD\u5E76\u4E0D\u9700\u8981\u8FD9\u4E2A\u5E93\u3002\u8003\u8651\u4F7F\u7528 <code>http.Server</code> \u7684\u5185\u5EFA <a href="https://golang.org/pkg/net/http/#Server.Shutdown" target="_blank" rel="noopener noreferrer">Shutdown()</a> \u65B9\u6CD5\u4F18\u96C5\u5173\u95ED\u3002 \u67E5\u770B\u793A\u4F8B <a href="./examples/graceful-shutdown">graceful-shutdown</a>.</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token comment">// +build go1.8</span>

<span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;context&quot;</span>
	<span class="token string">&quot;log&quot;</span>
	<span class="token string">&quot;net/http&quot;</span>
	<span class="token string">&quot;os&quot;</span>
	<span class="token string">&quot;os/signal&quot;</span>
	<span class="token string">&quot;syscall&quot;</span>
	<span class="token string">&quot;time&quot;</span>

	<span class="token string">&quot;github.com/gin-gonic/gin&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>
		c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">&quot;Welcome Gin Server&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>

	srv <span class="token operator">:=</span> <span class="token operator">&amp;</span>http<span class="token punctuation">.</span>Server<span class="token punctuation">{</span>
		Addr<span class="token punctuation">:</span>    <span class="token string">&quot;:8080&quot;</span><span class="token punctuation">,</span>
		Handler<span class="token punctuation">:</span> router<span class="token punctuation">,</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">go</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// service connections</span>
		<span class="token keyword">if</span> err <span class="token operator">:=</span> srv<span class="token punctuation">.</span><span class="token function">ListenAndServe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token operator">&amp;&amp;</span> err <span class="token operator">!=</span> http<span class="token punctuation">.</span>ErrServerClosed <span class="token punctuation">{</span>
			log<span class="token punctuation">.</span><span class="token function">Fatalf</span><span class="token punctuation">(</span><span class="token string">&quot;listen: %s\\n&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	<span class="token comment">// Wait for interrupt signal to gracefully shutdown the server with</span>
	<span class="token comment">// a timeout of 5 seconds.</span>
	quit <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">chan</span> os<span class="token punctuation">.</span>Signal<span class="token punctuation">)</span>
	<span class="token comment">// kill (no param) default send syscall.SIGTERM</span>
	<span class="token comment">// kill -2 is syscall.SIGINT</span>
	<span class="token comment">// kill -9 is syscall.SIGKILL but can&#39;t be catch, so don&#39;t need add it</span>
	signal<span class="token punctuation">.</span><span class="token function">Notify</span><span class="token punctuation">(</span>quit<span class="token punctuation">,</span> syscall<span class="token punctuation">.</span>SIGINT<span class="token punctuation">,</span> syscall<span class="token punctuation">.</span>SIGTERM<span class="token punctuation">)</span>
	<span class="token operator">&lt;-</span>quit
	log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Shutdown Server ...&quot;</span><span class="token punctuation">)</span>

	ctx<span class="token punctuation">,</span> cancel <span class="token operator">:=</span> context<span class="token punctuation">.</span><span class="token function">WithTimeout</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token operator">*</span>time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span>
	<span class="token keyword">defer</span> <span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">:=</span> srv<span class="token punctuation">.</span><span class="token function">Shutdown</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Fatal</span><span class="token punctuation">(</span><span class="token string">&quot;Server Shutdown:&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token comment">// catching ctx.Done(). timeout of 5 seconds.</span>
	<span class="token keyword">select</span> <span class="token punctuation">{</span>
	<span class="token keyword">case</span> <span class="token operator">&lt;-</span>ctx<span class="token punctuation">.</span><span class="token function">Done</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
		log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;timeout of 5 seconds.&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	log<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Server exiting&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5C06\u670D\u52A1\u5668\u6784\u5EFA\u4E3A\u4E00\u4E2A\u5305\u542B\u6A21\u677F\u6587\u4EF6\u7684\u4E8C\u8FDB\u5236\u6587\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u5C06\u670D\u52A1\u5668\u6784\u5EFA\u4E3A\u4E00\u4E2A\u5305\u542B\u6A21\u677F\u6587\u4EF6\u7684\u4E8C\u8FDB\u5236\u6587\u4EF6" aria-hidden="true">#</a> \u5C06\u670D\u52A1\u5668\u6784\u5EFA\u4E3A\u4E00\u4E2A\u5305\u542B\u6A21\u677F\u6587\u4EF6\u7684\u4E8C\u8FDB\u5236\u6587\u4EF6</h3><h3 id="build-a-single-binary-with-templates" tabindex="-1"><a class="header-anchor" href="#build-a-single-binary-with-templates" aria-hidden="true">#</a> Build a single binary with templates</h3><p>\u53EF\u4EE5\u901A\u8FC7\u4F7F\u7528 <a href="https://github.com/jessevdk/go-assets" target="_blank" rel="noopener noreferrer">go-assets</a>\uFF0C\u5C06\u670D\u52A1\u5668\u6784\u5EFA\u4E3A\u5305\u542B\u6A21\u677F\u7684\u5355\u4E2A\u4E8C\u8FDB\u5236\u6587\u4EF6</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	t<span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">loadTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	r<span class="token punctuation">.</span><span class="token function">SetHTMLTemplate</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>

	r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		c<span class="token punctuation">.</span><span class="token function">HTML</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">&quot;/html/index.tmpl&quot;</span><span class="token punctuation">,</span><span class="token boolean">nil</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8080&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// loadTemplate loads templates embedded by go-assets-builder</span>
<span class="token keyword">func</span> <span class="token function">loadTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>template<span class="token punctuation">.</span>Template<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	t <span class="token operator">:=</span> template<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">for</span> name<span class="token punctuation">,</span> file <span class="token operator">:=</span> <span class="token keyword">range</span> Assets<span class="token punctuation">.</span>Files <span class="token punctuation">{</span>
		<span class="token keyword">if</span> file<span class="token punctuation">.</span><span class="token function">IsDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span>strings<span class="token punctuation">.</span><span class="token function">HasSuffix</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token string">&quot;.tmpl&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">continue</span>
		<span class="token punctuation">}</span>
		h<span class="token punctuation">,</span> err <span class="token operator">:=</span> ioutil<span class="token punctuation">.</span><span class="token function">ReadAll</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err
		<span class="token punctuation">}</span>
		t<span class="token punctuation">,</span> err <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token function">string</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> t<span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>See a complete example in the <code>https://github.com/gin-gonic/examples/tree/master/assets-in-binary</code> directory.</p><h3 id="\u4F7F\u7528\u81EA\u5B9A\u4E49\u7ED3\u6784\u7ED1\u5B9A\u8868\u5355\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u81EA\u5B9A\u4E49\u7ED3\u6784\u7ED1\u5B9A\u8868\u5355\u6570\u636E" aria-hidden="true">#</a> \u4F7F\u7528\u81EA\u5B9A\u4E49\u7ED3\u6784\u7ED1\u5B9A\u8868\u5355\u6570\u636E</h3><h3 id="bind-form-data-request-with-custom-struct" tabindex="-1"><a class="header-anchor" href="#bind-form-data-request-with-custom-struct" aria-hidden="true">#</a> Bind form-data request with custom struct</h3><p>\u4EE5\u4E0B\u4F7F\u7528\u81EA\u5B9A\u4E49\u7ED3\u6784\u7684\u793A\u4F8B:</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> StructA <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    FieldA <span class="token builtin">string</span> <span class="token string">\`form:&quot;field_a&quot;\`</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> StructB <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    NestedStruct StructA
    FieldB <span class="token builtin">string</span> <span class="token string">\`form:&quot;field_b&quot;\`</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> StructC <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    NestedStructPointer <span class="token operator">*</span>StructA
    FieldC <span class="token builtin">string</span> <span class="token string">\`form:&quot;field_c&quot;\`</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> StructD <span class="token keyword">struct</span> <span class="token punctuation">{</span>
    NestedAnonyStruct <span class="token keyword">struct</span> <span class="token punctuation">{</span>
        FieldX <span class="token builtin">string</span> <span class="token string">\`form:&quot;field_x&quot;\`</span>
    <span class="token punctuation">}</span>
    FieldD <span class="token builtin">string</span> <span class="token string">\`form:&quot;field_d&quot;\`</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">GetDataB</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> b StructB
    c<span class="token punctuation">.</span><span class="token function">Bind</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>b<span class="token punctuation">)</span>
    c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span>
        <span class="token string">&quot;a&quot;</span><span class="token punctuation">:</span> b<span class="token punctuation">.</span>NestedStruct<span class="token punctuation">,</span>
        <span class="token string">&quot;b&quot;</span><span class="token punctuation">:</span> b<span class="token punctuation">.</span>FieldB<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">GetDataC</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> b StructC
    c<span class="token punctuation">.</span><span class="token function">Bind</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>b<span class="token punctuation">)</span>
    c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span>
        <span class="token string">&quot;a&quot;</span><span class="token punctuation">:</span> b<span class="token punctuation">.</span>NestedStructPointer<span class="token punctuation">,</span>
        <span class="token string">&quot;c&quot;</span><span class="token punctuation">:</span> b<span class="token punctuation">.</span>FieldC<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">GetDataD</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> b StructD
    c<span class="token punctuation">.</span><span class="token function">Bind</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>b<span class="token punctuation">)</span>
    c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span>
        <span class="token string">&quot;x&quot;</span><span class="token punctuation">:</span> b<span class="token punctuation">.</span>NestedAnonyStruct<span class="token punctuation">,</span>
        <span class="token string">&quot;d&quot;</span><span class="token punctuation">:</span> b<span class="token punctuation">.</span>FieldD<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/getb&quot;</span><span class="token punctuation">,</span> GetDataB<span class="token punctuation">)</span>
    r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/getc&quot;</span><span class="token punctuation">,</span> GetDataC<span class="token punctuation">)</span>
    r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/getd&quot;</span><span class="token punctuation">,</span> GetDataD<span class="token punctuation">)</span>

    r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Using the command <code>curl</code> command result:</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>$ curl &quot;http://localhost:8080/getb?field_a=hello&amp;field_b=world&quot;
{&quot;a&quot;:{&quot;FieldA&quot;:&quot;hello&quot;},&quot;b&quot;:&quot;world&quot;}
$ curl &quot;http://localhost:8080/getc?field_a=hello&amp;field_c=world&quot;
{&quot;a&quot;:{&quot;FieldA&quot;:&quot;hello&quot;},&quot;c&quot;:&quot;world&quot;}
$ curl &quot;http://localhost:8080/getd?field_x=hello&amp;field_d=world&quot;
{&quot;d&quot;:&quot;world&quot;,&quot;x&quot;:{&quot;FieldX&quot;:&quot;hello&quot;}}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5C1D\u8BD5\u5C06-body-\u7ED1\u5B9A\u5230\u4E0D\u540C\u7684\u7ED3\u6784\u4E2D" tabindex="-1"><a class="header-anchor" href="#\u5C1D\u8BD5\u5C06-body-\u7ED1\u5B9A\u5230\u4E0D\u540C\u7684\u7ED3\u6784\u4E2D" aria-hidden="true">#</a> \u5C1D\u8BD5\u5C06 body \u7ED1\u5B9A\u5230\u4E0D\u540C\u7684\u7ED3\u6784\u4E2D</h3><h3 id="try-to-bind-body-into-different-structs" tabindex="-1"><a class="header-anchor" href="#try-to-bind-body-into-different-structs" aria-hidden="true">#</a> Try to bind body into different structs</h3><p>The normal methods for binding request body consumes <code>c.Request.Body</code> and they cannot be called multiple times.</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">type</span> formA <span class="token keyword">struct</span> <span class="token punctuation">{</span>
  Foo <span class="token builtin">string</span> <span class="token string">\`json:&quot;foo&quot; xml:&quot;foo&quot; binding:&quot;required&quot;\`</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> formB <span class="token keyword">struct</span> <span class="token punctuation">{</span>
  Bar <span class="token builtin">string</span> <span class="token string">\`json:&quot;bar&quot; xml:&quot;bar&quot; binding:&quot;required&quot;\`</span>
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">SomeHandler</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  objA <span class="token operator">:=</span> formA<span class="token punctuation">{</span><span class="token punctuation">}</span>
  objB <span class="token operator">:=</span> formB<span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token comment">// This c.ShouldBind consumes c.Request.Body and it cannot be reused.</span>
  <span class="token keyword">if</span> errA <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">ShouldBind</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>objA<span class="token punctuation">)</span><span class="token punctuation">;</span> errA <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">\`the body should be formA\`</span><span class="token punctuation">)</span>
  <span class="token comment">// Always an error is occurred by this because c.Request.Body is EOF now.</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> errB <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">ShouldBind</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>objB<span class="token punctuation">)</span><span class="token punctuation">;</span> errB <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">\`the body should be formB\`</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>For this, you can use <code>c.ShouldBindBodyWith</code>.</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token function">SomeHandler</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  objA <span class="token operator">:=</span> formA<span class="token punctuation">{</span><span class="token punctuation">}</span>
  objB <span class="token operator">:=</span> formB<span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token comment">// This reads c.Request.Body and stores the result into the context.</span>
  <span class="token keyword">if</span> errA <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">ShouldBindBodyWith</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>objA<span class="token punctuation">,</span> binding<span class="token punctuation">.</span>JSON<span class="token punctuation">)</span><span class="token punctuation">;</span> errA <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">\`the body should be formA\`</span><span class="token punctuation">)</span>
  <span class="token comment">// At this time, it reuses body stored in the context.</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> errB <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">ShouldBindBodyWith</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>objB<span class="token punctuation">,</span> binding<span class="token punctuation">.</span>JSON<span class="token punctuation">)</span><span class="token punctuation">;</span> errB <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">\`the body should be formB JSON\`</span><span class="token punctuation">)</span>
  <span class="token comment">// And it can accepts other formats</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> errB2 <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">ShouldBindBodyWith</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>objB<span class="token punctuation">,</span> binding<span class="token punctuation">.</span>XML<span class="token punctuation">)</span><span class="token punctuation">;</span> errB2 <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">\`the body should be formB XML\`</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>c.ShouldBindBodyWith</code> stores body into the context before binding. This has a slight impact to performance, so you should not use this method if you are enough to call binding at once.</li><li>This feature is only needed for some formats -- <code>JSON</code>, <code>XML</code>, <code>MsgPack</code>, <code>ProtoBuf</code>. For other formats, <code>Query</code>, <code>Form</code>, <code>FormPost</code>, <code>FormMultipart</code>, can be called by <code>c.ShouldBind()</code> multiple times without any damage to performance (See <a href="https://github.com/gin-gonic/gin/pull/1341" target="_blank" rel="noopener noreferrer">#1341</a>).</li></ul><h3 id="http2-server-push" tabindex="-1"><a class="header-anchor" href="#http2-server-push" aria-hidden="true">#</a> http2 server push</h3><h3 id="http2-server-push-1" tabindex="-1"><a class="header-anchor" href="#http2-server-push-1" aria-hidden="true">#</a> http2 server push</h3><p>http.Pusher is supported only <strong>go1.8+</strong>. See the <a href="https://blog.golang.org/h2push" target="_blank" rel="noopener noreferrer">golang blog</a> for detail information.</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;html/template&quot;</span>
	<span class="token string">&quot;log&quot;</span>

	<span class="token string">&quot;github.com/gin-gonic/gin&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">var</span> html <span class="token operator">=</span> template<span class="token punctuation">.</span><span class="token function">Must</span><span class="token punctuation">(</span>template<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">&quot;https&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span><span class="token string">\`
&lt;html&gt;
&lt;head&gt;
  &lt;title&gt;Https Test&lt;/title&gt;
  &lt;script src=&quot;/assets/app.js&quot;&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;h1 style=&quot;color:red;&quot;&gt;Welcome, Ginner!&lt;/h1&gt;
&lt;/body&gt;
&lt;/html&gt;
\`</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	r<span class="token punctuation">.</span><span class="token function">Static</span><span class="token punctuation">(</span><span class="token string">&quot;/assets&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;./assets&quot;</span><span class="token punctuation">)</span>
	r<span class="token punctuation">.</span><span class="token function">SetHTMLTemplate</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span>

	r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> pusher <span class="token operator">:=</span> c<span class="token punctuation">.</span>Writer<span class="token punctuation">.</span><span class="token function">Pusher</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> pusher <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
			<span class="token comment">// use pusher.Push() to do server push</span>
			<span class="token keyword">if</span> err <span class="token operator">:=</span> pusher<span class="token punctuation">.</span><span class="token function">Push</span><span class="token punctuation">(</span><span class="token string">&quot;/assets/app.js&quot;</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
				log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to push: %v&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		c<span class="token punctuation">.</span><span class="token function">HTML</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token string">&quot;https&quot;</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span>
			<span class="token string">&quot;status&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;success&quot;</span><span class="token punctuation">,</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>

	<span class="token comment">// Listen and Server in https://127.0.0.1:8080</span>
	r<span class="token punctuation">.</span><span class="token function">RunTLS</span><span class="token punctuation">(</span><span class="token string">&quot;:8080&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;./testdata/server.pem&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;./testdata/server.key&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5B9A\u4E49\u8DEF\u7531\u65E5\u5FD7\u8BB0\u5F55\u683C\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u5B9A\u4E49\u8DEF\u7531\u65E5\u5FD7\u8BB0\u5F55\u683C\u5F0F" aria-hidden="true">#</a> \u5B9A\u4E49\u8DEF\u7531\u65E5\u5FD7\u8BB0\u5F55\u683C\u5F0F</h3><h3 id="define-format-for-the-log-of-routes" tabindex="-1"><a class="header-anchor" href="#define-format-for-the-log-of-routes" aria-hidden="true">#</a> Define format for the log of routes</h3><p>\u9ED8\u8BA4\u8DEF\u7531\u65E5\u5FD7\u683C\u5F0F\u5982\u4E0B\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>[GIN-debug] POST   /foo                      --&gt; main.main.func1 (3 handlers)
[GIN-debug] GET    /bar                      --&gt; main.main.func2 (3 handlers)
[GIN-debug] GET    /status                   --&gt; main.main.func3 (3 handlers)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u4F60\u60F3\u4EE5\u7ED9\u5B9A\u7684\u683C\u5F0F\u8BB0\u5F55\u65E5\u5FD7\uFF08\u4F8B\u5982 JSON \u7684\u952E\u503C\u6216\u5176\u4ED6\u6570\u636E\uFF09\uFF0C\u53EF\u4EE5\u4F7F\u7528 <code>gin.DebugPrintRputeFunc</code> \u5B9A\u4E49\u683C\u5F0F\u3002\u4E0B\u9762\u7684\u4F8B\u5B50\uFF0C\u6211\u4EEC\u4F7F\u7528\u6807\u51C6\u65E5\u5FD7\u5305\u8BB0\u5F55\u6240\u6709\u8DEF\u7531\uFF0C \u4F46\u4F60\u4E5F\u53EF\u4EE5\u4F7F\u7528\u7B26\u5408\u4F60\u9700\u6C42\u7684\u5176\u4ED6\u65E5\u5FD7\u5305\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;log&quot;</span>
	<span class="token string">&quot;net/http&quot;</span>

	<span class="token string">&quot;github.com/gin-gonic/gin&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	gin<span class="token punctuation">.</span>DebugPrintRouteFunc <span class="token operator">=</span> <span class="token keyword">func</span><span class="token punctuation">(</span>httpMethod<span class="token punctuation">,</span> absolutePath<span class="token punctuation">,</span> handlerName <span class="token builtin">string</span><span class="token punctuation">,</span> nuHandlers <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;endpoint %v %v %v %v\\n&quot;</span><span class="token punctuation">,</span> httpMethod<span class="token punctuation">,</span> absolutePath<span class="token punctuation">,</span> handlerName<span class="token punctuation">,</span> nuHandlers<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	r<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">&quot;/foo&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>

	r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/bar&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>

	r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/status&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> <span class="token string">&quot;ok&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>

	<span class="token comment">// Listen and Server in http://0.0.0.0:8080</span>
	r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="set-and-get-a-cookie" tabindex="-1"><a class="header-anchor" href="#set-and-get-a-cookie" aria-hidden="true">#</a> Set and get a cookie</h3><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>

    <span class="token string">&quot;github.com/gin-gonic/gin&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    router <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    router<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/cookie&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        cookie<span class="token punctuation">,</span> err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Cookie</span><span class="token punctuation">(</span><span class="token string">&quot;gin_cookie&quot;</span><span class="token punctuation">)</span>

        <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
            cookie <span class="token operator">=</span> <span class="token string">&quot;NotSet&quot;</span>
            c<span class="token punctuation">.</span><span class="token function">SetCookie</span><span class="token punctuation">(</span><span class="token string">&quot;gin_cookie&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span> <span class="token number">3600</span><span class="token punctuation">,</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;localhost&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>

        fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Cookie value: %s \\n&quot;</span><span class="token punctuation">,</span> cookie<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    router<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="testing" tabindex="-1"><a class="header-anchor" href="#testing" aria-hidden="true">#</a> Testing</h2><p><code>net/http/httptest</code>\u5305\u5F88\u9002\u5408\u7528\u4E8EHTTP\u6D4B\u8BD5\u3002</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">func</span> <span class="token function">setupRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span>gin<span class="token punctuation">.</span>Engine <span class="token punctuation">{</span>
	r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/ping&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		c<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token string">&quot;pong&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token keyword">return</span> r
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	r <span class="token operator">:=</span> <span class="token function">setupRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8080&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6D4B\u8BD5\u4EE3\u7801\u793A\u4F8B\u5982\u4E0B\uFF1A</p><div class="language-go ext-go line-numbers-mode"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
	<span class="token string">&quot;net/http&quot;</span>
	<span class="token string">&quot;net/http/httptest&quot;</span>
	<span class="token string">&quot;testing&quot;</span>

	<span class="token string">&quot;github.com/stretchr/testify/assert&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">TestPingRoute</span><span class="token punctuation">(</span>t <span class="token operator">*</span>testing<span class="token punctuation">.</span>T<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	router <span class="token operator">:=</span> <span class="token function">setupRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

	w <span class="token operator">:=</span> httptest<span class="token punctuation">.</span><span class="token function">NewRecorder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	req<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> http<span class="token punctuation">.</span><span class="token function">NewRequest</span><span class="token punctuation">(</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/ping&quot;</span><span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">)</span>
	router<span class="token punctuation">.</span><span class="token function">ServeHTTP</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> req<span class="token punctuation">)</span>

	assert<span class="token punctuation">.</span><span class="token function">Equal</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> w<span class="token punctuation">.</span>Code<span class="token punctuation">)</span>
	assert<span class="token punctuation">.</span><span class="token function">Equal</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token string">&quot;pong&quot;</span><span class="token punctuation">,</span> w<span class="token punctuation">.</span>Body<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="users" tabindex="-1"><a class="header-anchor" href="#users" aria-hidden="true">#</a> Users</h2><p>Awesome project lists using <a href="https://github.com/gin-gonic/gin" target="_blank" rel="noopener noreferrer">Gin</a> web framework.</p><ul><li><a href="https://github.com/drone/drone" target="_blank" rel="noopener noreferrer">drone</a>: Drone is a Continuous Delivery platform built on Docker, written in Go.</li><li><a href="https://github.com/appleboy/gorush" target="_blank" rel="noopener noreferrer">gorush</a>: A push notification server written in Go.</li><li><a href="https://github.com/fnproject/fn" target="_blank" rel="noopener noreferrer">fnproject</a>: The container native, cloud agnostic serverless platform.</li></ul>`,291);function p(e,o){return t}var i=n(a,[["render",p],["__file","index.html.vue"]]);export{i as default};
